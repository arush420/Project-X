# Generated by Django 5.1.3 on 2025-01-06 11:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '0045_einvoice_verificationactivity_verificationrequest_and_more'),
    ]

    operations = [
        # Drop existing EInvoice table
        migrations.DeleteModel(
            name='EInvoice',
        ),
        
        # Create new comprehensive EInvoice model
        migrations.CreateModel(
            name='EInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                # Invoice Basic Information
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('invoice_date', models.DateField()),
                ('invoice_type', models.CharField(choices=[('B2B', 'B2B - Business to Business'), ('B2C', 'B2C - Business to Consumer'), ('SEZWP', 'SEZ with Payment'), ('SEZWOP', 'SEZ without Payment'), ('EXPWP', 'Export with Payment'), ('EXPWOP', 'Export without Payment'), ('DEXPW', 'Deemed Export')], default='B2B', max_length=10)),
                ('document_type', models.CharField(choices=[('INV', 'Tax Invoice'), ('CRN', 'Credit Note'), ('DBN', 'Debit Note')], default='INV', max_length=3)),
                ('reverse_charge', models.BooleanField(default=False)),
                ('irn', models.CharField(blank=True, max_length=64, null=True)),
                
                # Supplier Information
                ('supplier_gstin', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Invalid GSTIN format', regex='^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[A-Z0-9]{1}[Z]{1}[A-Z0-9]{1}$')])),
                ('supplier_legal_name', models.CharField(max_length=200)),
                ('supplier_address', models.TextField()),
                ('supplier_place_of_supply', models.CharField(max_length=100)),
                ('supplier_state_code', models.CharField(choices=[('01', '01 - Jammu and Kashmir'), ('02', '02 - Himachal Pradesh'), ('03', '03 - Punjab'), ('04', '04 - Chandigarh'), ('05', '05 - Uttarakhand'), ('06', '06 - Haryana'), ('07', '07 - Delhi'), ('08', '08 - Rajasthan'), ('09', '09 - Uttar Pradesh'), ('10', '10 - Bihar'), ('11', '11 - Sikkim'), ('12', '12 - Arunachal Pradesh'), ('13', '13 - Nagaland'), ('14', '14 - Manipur'), ('15', '15 - Mizoram'), ('16', '16 - Tripura'), ('17', '17 - Meghalaya'), ('18', '18 - Assam'), ('19', '19 - West Bengal'), ('20', '20 - Jharkhand'), ('21', '21 - Odisha'), ('22', '22 - Chhattisgarh'), ('23', '23 - Madhya Pradesh'), ('24', '24 - Gujarat'), ('25', '25 - Daman and Diu'), ('26', '26 - Dadra and Nagar Haveli'), ('27', '27 - Maharashtra'), ('28', '28 - Andhra Pradesh'), ('29', '29 - Karnataka'), ('30', '30 - Goa'), ('31', '31 - Lakshadweep'), ('32', '32 - Kerala'), ('33', '33 - Tamil Nadu'), ('34', '34 - Puducherry'), ('35', '35 - Andaman and Nicobar Islands'), ('36', '36 - Telangana'), ('37', '37 - Andhra Pradesh (New)'), ('38', '38 - Ladakh')], max_length=2)),
                
                # Buyer Information
                ('buyer_gstin', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message='Invalid GSTIN format', regex='^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[A-Z0-9]{1}[Z]{1}[A-Z0-9]{1}$')])),
                ('buyer_legal_name', models.CharField(max_length=200)),
                ('buyer_address', models.TextField()),
                ('buyer_state_code', models.CharField(choices=[('01', '01 - Jammu and Kashmir'), ('02', '02 - Himachal Pradesh'), ('03', '03 - Punjab'), ('04', '04 - Chandigarh'), ('05', '05 - Uttarakhand'), ('06', '06 - Haryana'), ('07', '07 - Delhi'), ('08', '08 - Rajasthan'), ('09', '09 - Uttar Pradesh'), ('10', '10 - Bihar'), ('11', '11 - Sikkim'), ('12', '12 - Arunachal Pradesh'), ('13', '13 - Nagaland'), ('14', '14 - Manipur'), ('15', '15 - Mizoram'), ('16', '16 - Tripura'), ('17', '17 - Meghalaya'), ('18', '18 - Assam'), ('19', '19 - West Bengal'), ('20', '20 - Jharkhand'), ('21', '21 - Odisha'), ('22', '22 - Chhattisgarh'), ('23', '23 - Madhya Pradesh'), ('24', '24 - Gujarat'), ('25', '25 - Daman and Diu'), ('26', '26 - Dadra and Nagar Haveli'), ('27', '27 - Maharashtra'), ('28', '28 - Andhra Pradesh'), ('29', '29 - Karnataka'), ('30', '30 - Goa'), ('31', '31 - Lakshadweep'), ('32', '32 - Kerala'), ('33', '33 - Tamil Nadu'), ('34', '34 - Puducherry'), ('35', '35 - Andaman and Nicobar Islands'), ('36', '36 - Telangana'), ('37', '37 - Andhra Pradesh (New)'), ('38', '38 - Ladakh')], max_length=2)),
                
                # Additional Information
                ('dispatch_from_address', models.TextField(blank=True, null=True)),
                ('shipping_address', models.TextField(blank=True, null=True)),
                ('payment_terms', models.CharField(blank=True, max_length=200, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('reference_document', models.CharField(blank=True, help_text='e.g., PO Number', max_length=100, null=True)),
                
                # Transporter Details
                ('transporter_name', models.CharField(blank=True, max_length=200, null=True)),
                ('transporter_id', models.CharField(blank=True, max_length=15, null=True)),
                ('vehicle_number', models.CharField(blank=True, max_length=20, null=True)),
                
                # Calculated Totals
                ('total_taxable_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_cgst', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_sgst', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_igst', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_invoice_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                
                # Timestamps
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'E-Invoice',
                'verbose_name_plural': 'E-Invoices',
                'ordering': ['-created_at'],
            },
        ),
        
        # Create EInvoiceLineItem model
        migrations.CreateModel(
            name='EInvoiceLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_service_name', models.CharField(max_length=200)),
                ('hsn_sac_code', models.CharField(max_length=10)),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('cgst_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('sgst_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('igst_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('cgst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('sgst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('igst_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('item_total_with_tax', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='line_items', to='employees.einvoice')),
            ],
        ),
    ]
