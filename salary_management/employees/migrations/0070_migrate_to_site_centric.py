# Generated by Django 4.2 on 2025-07-11 09:01

from django.db import migrations, models
import django.db.models.deletion


def migrate_data_to_sites(apps, schema_editor):
    """
    Migrate existing company data to site-centric structure
    """
    Company = apps.get_model('employees', 'Company')
    Site = apps.get_model('employees', 'Site')
    Employee = apps.get_model('employees', 'Employee')
    SalaryRule = apps.get_model('employees', 'SalaryRule')
    SalaryOtherField = apps.get_model('employees', 'SalaryOtherField')
    
    # Create default sites for each company
    for company in Company.objects.all():
        site, created = Site.objects.get_or_create(
            site_code=company.company_code,
            site_name=company.company_name,
            defaults={
                'company': company,
                'site_address_line1': company.company_address,
                'site_gst_number': company.company_gst_number,
                'site_contact_person_name': company.company_contact_person_name,
                'site_contact_person_number': company.company_contact_person_number,
                'site_contact_person_email': company.company_contact_person_email,
                'site_pf_code': company.company_pf_code,
                'site_esic_code': company.company_esic_code,
                'site_service_charge_salary': company.company_service_charge_salary,
                'site_service_charge_over_time': company.company_service_charge_over_time,
                'site_account_number': company.company_account_number,
                'site_ifsc_code': company.company_ifsc_code,
                'site_salary_component_type': company.company_salary_component_type,
                'site_ot_rule': company.company_ot_rule,
                'site_bonus_formula': company.company_bonus_formula,
                'site_pf_deduction': company.company_pf_deduction,
                'site_esic_deduction_rule': company.company_esic_deduction_rule,
                'site_welfare_deduction_rule': company.company_welfare_deduction_rule,
            }
        )
        
        # Update salary rules
        for salary_rule in SalaryRule.objects.filter(company=company):
            salary_rule.site = site
            salary_rule.save()
            
        # Update salary other fields
        for salary_other_field in SalaryOtherField.objects.filter(company=company):
            salary_other_field.site = site
            salary_other_field.save()


class Migration(migrations.Migration):

    dependencies = [
        ('employees', '0069_remove_servicebill_client_contact_person_and_more'),
    ]

    operations = [
        # Step 1: Add the new fields with null=True to allow data migration
        migrations.AddField(
            model_name='site',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sites', to='employees.company'),
        ),
        migrations.AddField(
            model_name='employee',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='employees.site'),
        ),
        migrations.AddField(
            model_name='salaryrule',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salary_rules', to='employees.site'),
        ),
        migrations.AddField(
            model_name='salaryotherfield',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salary_other_fields', to='employees.site'),
        ),
        
        # Step 2: Migrate the data
        migrations.RunPython(migrate_data_to_sites),
        
        # Step 3: Remove the old fields
        migrations.RemoveField(
            model_name='employee',
            name='company',
        ),
        migrations.RemoveField(
            model_name='salaryrule',
            name='company',
        ),
        migrations.RemoveField(
            model_name='salaryotherfield',
            name='company',
        ),
        
        # Step 4: Update constraints
        migrations.AlterUniqueTogether(
            name='employeesattendance',
            unique_together={('employee', 'year', 'month')},
        ),
    ]
