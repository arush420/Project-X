Index: salary_management/employees/migrations/0022_remove_company_salary_status_company_allowance_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0022_remove_company_salary_status_company_allowance_and_more.py b/salary_management/employees/migrations/0022_remove_company_salary_status_company_allowance_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0022_remove_company_salary_status_company_allowance_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,116 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-31 16:04
-
-import django.core.validators
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0021_alter_company_company_account_number_and_more'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='company',
-            name='salary_status',
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='allowance',
-            field=models.BooleanField(default=False, verbose_name='Allowance'),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='hra',
-            field=models.BooleanField(default=False, verbose_name='HRA'),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_account_number',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_address',
-            field=models.TextField(),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_bonus_formula',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_email',
-            field=models.CharField(default='', max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_name',
-            field=models.CharField(default='', max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_number',
-            field=models.CharField(default='0', max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_esic_code',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_esic_deduction_rule',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_gst_number',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_ifsc_code',
-            field=models.CharField(default='0', max_length=11),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_name',
-            field=models.CharField(default='', max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_ot_rule',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_pf_code',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_pf_deduction',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_service_charge_over_time',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_service_charge_salary',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_welfare_deduction_rule',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.DeleteModel(
-            name='CompanyRule',
-        ),
-    ]
Index: salary_management/employees/migrations/0016_remove_advancetransaction_ifsc_code_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0016_remove_advancetransaction_ifsc_code_and_more.py b/salary_management/employees/migrations/0016_remove_advancetransaction_ifsc_code_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0016_remove_advancetransaction_ifsc_code_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,37 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-26 00:40
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0015_profile_database'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='advancetransaction',
-            name='ifsc_code',
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='account_ifsc_code',
-            field=models.CharField(blank=True, default='', max_length=11, null=True),
-        ),
-        migrations.AlterField(
-            model_name='advancetransaction',
-            name='account',
-            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
-        ),
-        migrations.AlterField(
-            model_name='advancetransaction',
-            name='amount',
-            field=models.DecimalField(blank=True, decimal_places=2, default='0.00', max_digits=10, null=True),
-        ),
-        migrations.AlterField(
-            model_name='advancetransaction',
-            name='month',
-            field=models.CharField(default='October', max_length=20),
-        ),
-    ]
Index: salary_management/employees/migrations/0003_salary_advance.py
===================================================================
diff --git a/salary_management/employees/migrations/0003_salary_advance.py b/salary_management/employees/migrations/0003_salary_advance.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0003_salary_advance.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,18 +0,0 @@
-# Generated by Django 5.1.1 on 2024-10-03 15:42
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0002_salary_advance_deduction_salary_basic_salary_and_more'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='salary',
-            name='advance',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-    ]
Index: salary_management/employees/migrations/0017_remove_advancetransaction_account_ifsc_code_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0017_remove_advancetransaction_account_ifsc_code_and_more.py b/salary_management/employees/migrations/0017_remove_advancetransaction_account_ifsc_code_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0017_remove_advancetransaction_account_ifsc_code_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,113 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-30 04:27
-
-import django.core.validators
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0016_remove_advancetransaction_ifsc_code_and_more'),
-    ]
-
-    operations = [
-        migrations.RemoveField(
-            model_name='advancetransaction',
-            name='account_ifsc_code',
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='ifsc_code',
-            field=models.CharField(blank=True, default=0.0, max_length=50, null=True),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_bonus_formula',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_cab_deduction',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_contact_person_email',
-            field=models.CharField(default='', max_length=100),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_esic_code',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_esic_deduction_rule',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_ot_rule',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_pf_code',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_salary_component_type',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_service_charge_over_time',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_service_charge_salary',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AddField(
-            model_name='company',
-            name='company_welfare_deduction_rule',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='advancetransaction',
-            name='account',
-            field=models.CharField(blank=True, default=0.0, max_length=50, null=True),
-        ),
-        migrations.AlterField(
-            model_name='advancetransaction',
-            name='amount',
-            field=models.DecimalField(blank=True, decimal_places=2, default='', max_digits=10, null=True),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_account_number',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_name',
-            field=models.CharField(default='', max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_number',
-            field=models.CharField(default='0', max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_gst_number',
-            field=models.CharField(default='0', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_ifsc_code',
-            field=models.CharField(default='0', max_length=11),
-        ),
-    ]
Index: salary_management/employees/migrations/0023_alter_advancetransaction_month_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0023_alter_advancetransaction_month_and_more.py b/salary_management/employees/migrations/0023_alter_advancetransaction_month_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0023_alter_advancetransaction_month_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,63 +0,0 @@
-# Generated by Django 5.1.2 on 2024-11-02 06:14
-
-import django.db.models.deletion
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0022_remove_company_salary_status_company_allowance_and_more'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='advancetransaction',
-            name='month',
-            field=models.CharField(default='November', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='allowance',
-            field=models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=10),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='hra',
-            field=models.CharField(choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=10),
-        ),
-        migrations.CreateModel(
-            name='SalaryRule',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('standard_head', models.CharField(max_length=20)),
-                ('Basic_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Basic_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Sr_All_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Sr_All_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('DA_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('DA_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('HRA_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('HRA_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('TA_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('TA_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Med_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Med_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Conv_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Conv_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Wash_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Wash_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Eff_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Eff_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Other_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Other_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Incentive_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Incentive_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Bonus_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Bonus_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('Over_Time_rate_type', models.CharField(choices=[('Per Month', 'Per Month')], default='Per Month', max_length=20)),
-                ('Over_Time_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
-                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_rules', to='employees.company')),
-            ],
-        ),
-    ]
Index: salary_management/employees/migrations/0006_salarytotals_staffsalary.py
===================================================================
diff --git a/salary_management/employees/migrations/0006_salarytotals_staffsalary.py b/salary_management/employees/migrations/0006_salarytotals_staffsalary.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0006_salarytotals_staffsalary.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,56 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-11 07:19
-
-import django.utils.timezone
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0005_mymodel_alter_salary_unique_together_and_more'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='SalaryTotals',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('month', models.IntegerField()),
-                ('year', models.IntegerField()),
-                ('total_gross_salary', models.DecimalField(decimal_places=2, max_digits=12)),
-                ('total_pf', models.DecimalField(decimal_places=2, max_digits=12)),
-                ('total_esic', models.DecimalField(decimal_places=2, max_digits=12)),
-                ('total_canteen', models.DecimalField(decimal_places=2, max_digits=12)),
-                ('total_advance', models.DecimalField(decimal_places=2, max_digits=12)),
-                ('total_net_salary', models.DecimalField(decimal_places=2, max_digits=12)),
-            ],
-        ),
-        migrations.CreateModel(
-            name='StaffSalary',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('pf_no', models.CharField(max_length=20, unique=True)),
-                ('name', models.CharField(max_length=100)),
-                ('father_name', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('gross_rate', models.DecimalField(decimal_places=2, max_digits=10)),
-                ('esic_applicable', models.BooleanField(default=False)),
-                ('pf_applicable', models.BooleanField(default=False)),
-                ('lwf_applicable', models.BooleanField(default=False)),
-                ('pd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
-                ('esic_deduction', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('pf_deduction', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('lwf_deduction', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('net_salary', models.DecimalField(decimal_places=2, max_digits=10)),
-                ('advance_deduction', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('salary_paid_from_account', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('date', models.DateField(default=django.utils.timezone.now)),
-                ('opening_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
-                ('amount_paid_to_employee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('amount_recovered', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('amount_left', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
-                ('comment', models.TextField(blank=True, null=True)),
-                ('column_1', models.CharField(blank=True, max_length=100, null=True)),
-            ],
-        ),
-    ]
Index: salary_management/employees/migrations/0010_advancetransaction_paid_received_account_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0010_advancetransaction_paid_received_account_and_more.py b/salary_management/employees/migrations/0010_advancetransaction_paid_received_account_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0010_advancetransaction_paid_received_account_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,23 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-11 10:33
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0009_advancetransaction'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='paid_received_account',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='paid_received_by',
-            field=models.CharField(default='Unknown', max_length=100),
-        ),
-    ]
Index: salary_management/employees/migrations/0014_task_user.py
===================================================================
diff --git a/salary_management/employees/migrations/0014_task_user.py b/salary_management/employees/migrations/0014_task_user.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0014_task_user.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,21 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-22 05:42
-
-import django.db.models.deletion
-from django.conf import settings
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0013_alter_advancetransaction_mode_and_more'),
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='task',
-            name='user',
-            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transferred_tasks', to=settings.AUTH_USER_MODEL),
-        ),
-    ]
Index: salary_management/employees/migrations/0004_customuser.py
===================================================================
diff --git a/salary_management/employees/migrations/0004_customuser.py b/salary_management/employees/migrations/0004_customuser.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0004_customuser.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,43 +0,0 @@
-# Generated by Django 5.1.1 on 2024-09-26 06:24
-
-import django.contrib.auth.models
-import django.contrib.auth.validators
-import django.utils.timezone
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('auth', '0012_alter_user_first_name_max_length'),
-        ('employees', '0003_payment'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='CustomUser',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('password', models.CharField(max_length=128, verbose_name='password')),
-                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
-                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
-                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
-                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
-                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
-                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
-                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
-                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
-                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
-                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
-                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
-            ],
-            options={
-                'verbose_name': 'user',
-                'verbose_name_plural': 'users',
-                'abstract': False,
-            },
-            managers=[
-                ('objects', django.contrib.auth.models.UserManager()),
-            ],
-        ),
-    ]
Index: salary_management/employees/migrations/0007_vendorinformation_purchaseitem_category_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0007_vendorinformation_purchaseitem_category_and_more.py b/salary_management/employees/migrations/0007_vendorinformation_purchaseitem_category_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0007_vendorinformation_purchaseitem_category_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,58 +0,0 @@
-# Generated by Django 5.1.1 on 2024-09-27 05:10
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0006_purchaseitem'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='VendorInformation',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('vendor_id', models.CharField(max_length=4)),
-                ('firm_code', models.CharField(max_length=4)),
-                ('vendor_name', models.CharField(max_length=100)),
-                ('vendor_address', models.TextField()),
-                ('vendor_gst_number', models.CharField(max_length=20)),
-                ('vendor_account_number', models.CharField(max_length=20)),
-                ('vendor_ifsc_code', models.CharField(max_length=11)),
-                ('vendor_contact_person_name', models.CharField(max_length=100)),
-                ('vendor_contact_person_number', models.CharField(max_length=100)),
-            ],
-        ),
-        migrations.AddField(
-            model_name='purchaseitem',
-            name='category',
-            field=models.CharField(choices=[('Stationary', 'Stationary'), ('Furniture', 'Furniture'), ('Pantry', 'Pantry'), ('Miscellaneous', 'Miscellaneous')], default='Miscellaneous', max_length=50),
-        ),
-        migrations.AddField(
-            model_name='purchaseitem',
-            name='cgst_amount',
-            field=models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=12),
-        ),
-        migrations.AddField(
-            model_name='purchaseitem',
-            name='igst_amount',
-            field=models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=12),
-        ),
-        migrations.AddField(
-            model_name='purchaseitem',
-            name='sgst_amount',
-            field=models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=12),
-        ),
-        migrations.AlterField(
-            model_name='purchaseitem',
-            name='net_price',
-            field=models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=12),
-        ),
-        migrations.AlterField(
-            model_name='purchaseitem',
-            name='purchased_item',
-            field=models.CharField(max_length=255),
-        ),
-    ]
Index: salary_management/employees/migrations/0009_advancetransaction.py
===================================================================
diff --git a/salary_management/employees/migrations/0009_advancetransaction.py b/salary_management/employees/migrations/0009_advancetransaction.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0009_advancetransaction.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,27 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-11 10:01
-
-import django.db.models.deletion
-import django.utils.timezone
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0008_alter_staffsalary_advance_deduction_and_more'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='AdvanceTransaction',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('date', models.DateField(default=django.utils.timezone.now)),
-                ('advance_taken', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
-                ('advance_deducted', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
-                ('advance_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
-                ('comment', models.TextField(blank=True, null=True)),
-                ('staff_salary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='employees.staffsalary')),
-            ],
-        ),
-    ]
Index: salary_management/employees/migrations/0002_profile.py
===================================================================
diff --git a/salary_management/employees/migrations/0002_profile.py b/salary_management/employees/migrations/0002_profile.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0002_profile.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,23 +0,0 @@
-# Generated by Django 5.1.1 on 2024-09-24 13:31
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0001_initial'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Profile',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('organisation_name', models.CharField(max_length=255)),
-                ('address', models.TextField()),
-                ('account_number', models.CharField(max_length=20)),
-                ('ifsc_code', models.CharField(max_length=11)),
-            ],
-        ),
-    ]
Index: salary_management/employees/migrations/0007_staffsalary_advance_given_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0007_staffsalary_advance_given_and_more.py b/salary_management/employees/migrations/0007_staffsalary_advance_given_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0007_staffsalary_advance_given_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,23 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-11 07:33
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0006_salarytotals_staffsalary'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='staffsalary',
-            name='advance_given',
-            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
-        ),
-        migrations.AddField(
-            model_name='staffsalary',
-            name='advance_pending',
-            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
-        ),
-    ]
Index: salary_management/employees/migrations/0010_alter_salary_options.py
===================================================================
diff --git a/salary_management/employees/migrations/0010_alter_salary_options.py b/salary_management/employees/migrations/0010_alter_salary_options.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0010_alter_salary_options.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,17 +0,0 @@
-# Generated by Django 5.1.1 on 2024-10-01 14:41
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0009_alter_company_company_code'),
-    ]
-
-    operations = [
-        migrations.AlterModelOptions(
-            name='salary',
-            options={'ordering': ['-year', '-month'], 'permissions': [('can_generate_payroll', 'Can generate payroll'), ('can_modify_salary', 'Can modify salary records'), ('can_view_confidential_data', 'Can view confidential data')]},
-        ),
-    ]
Index: salary_management/employees/migrations/0018_rename_company_cab_deduction_company_company_pf_deduction.py
===================================================================
diff --git a/salary_management/employees/migrations/0018_rename_company_cab_deduction_company_company_pf_deduction.py b/salary_management/employees/migrations/0018_rename_company_cab_deduction_company_company_pf_deduction.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0018_rename_company_cab_deduction_company_company_pf_deduction.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,18 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-30 05:02
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0017_remove_advancetransaction_account_ifsc_code_and_more'),
-    ]
-
-    operations = [
-        migrations.RenameField(
-            model_name='company',
-            old_name='company_cab_deduction',
-            new_name='company_pf_deduction',
-        ),
-    ]
Index: salary_management/employees/migrations/0024_alter_salaryrule_basic_rate_type_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0024_alter_salaryrule_basic_rate_type_and_more.py b/salary_management/employees/migrations/0024_alter_salaryrule_basic_rate_type_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0024_alter_salaryrule_basic_rate_type_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,78 +0,0 @@
-# Generated by Django 5.1.2 on 2024-11-02 09:41
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0023_alter_advancetransaction_month_and_more'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Basic_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Bonus_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Conv_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='DA_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Eff_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='HRA_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Incentive_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Med_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Other_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Over_Time_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Sr_All_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='TA_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='salaryrule',
-            name='Wash_rate_type',
-            field=models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20),
-        ),
-    ]
Index: salary_management/employees/migrations/0009_alter_company_company_code.py
===================================================================
diff --git a/salary_management/employees/migrations/0009_alter_company_company_code.py b/salary_management/employees/migrations/0009_alter_company_company_code.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0009_alter_company_company_code.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,18 +0,0 @@
-# Generated by Django 5.1.1 on 2024-09-30 07:04
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0008_company'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='company',
-            name='company_code',
-            field=models.CharField(default='0000', max_length=4),
-        ),
-    ]
Index: salary_management/employees/migrations/0003_payment.py
===================================================================
diff --git a/salary_management/employees/migrations/0003_payment.py b/salary_management/employees/migrations/0003_payment.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0003_payment.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,24 +0,0 @@
-# Generated by Django 5.1.1 on 2024-09-24 13:53
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0002_profile'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Payment',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('company_name', models.CharField(max_length=255)),
-                ('amount_received', models.DecimalField(decimal_places=2, max_digits=10)),
-                ('payment_date', models.DateField()),
-                ('account_of_own_company', models.CharField(max_length=255)),
-                ('payment_against_bill', models.CharField(max_length=255)),
-            ],
-        ),
-    ]
Index: salary_management/employees/migrations/0008_alter_staffsalary_advance_deduction_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0008_alter_staffsalary_advance_deduction_and_more.py b/salary_management/employees/migrations/0008_alter_staffsalary_advance_deduction_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0008_alter_staffsalary_advance_deduction_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,28 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-11 08:34
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0007_staffsalary_advance_given_and_more'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='staffsalary',
-            name='advance_deduction',
-            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AlterField(
-            model_name='staffsalary',
-            name='advance_given',
-            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AlterField(
-            model_name='staffsalary',
-            name='advance_pending',
-            field=models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10),
-        ),
-    ]
Index: salary_management/employees/migrations/0002_salary_advance_deduction_salary_basic_salary_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0002_salary_advance_deduction_salary_basic_salary_and_more.py b/salary_management/employees/migrations/0002_salary_advance_deduction_salary_basic_salary_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0002_salary_advance_deduction_salary_basic_salary_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,48 +0,0 @@
-# Generated by Django 5.1.1 on 2024-10-03 06:32
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0001_alter_company_company_contact_person_number'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='salary',
-            name='advance_deduction',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-        migrations.AddField(
-            model_name='salary',
-            name='basic_salary',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-        migrations.AddField(
-            model_name='salary',
-            name='canteen',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-        migrations.AddField(
-            model_name='salary',
-            name='esic',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-        migrations.AddField(
-            model_name='salary',
-            name='pf',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-        migrations.AddField(
-            model_name='salary',
-            name='transport',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-        migrations.AlterField(
-            model_name='salary',
-            name='gross_salary',
-            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
-        ),
-    ]
Index: salary_management/employees/migrations/0021_alter_company_company_account_number_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0021_alter_company_company_account_number_and_more.py b/salary_management/employees/migrations/0021_alter_company_company_account_number_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0021_alter_company_company_account_number_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,99 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-31 13:08
-
-import django.core.validators
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0020_alter_company_salary_status_companyrule'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='company',
-            name='company_account_number',
-            field=models.CharField(blank=True, max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_address',
-            field=models.CharField(blank=True, max_length=200),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_bonus_formula',
-            field=models.CharField(blank=True, max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_email',
-            field=models.EmailField(blank=True, max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_name',
-            field=models.CharField(blank=True, max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_number',
-            field=models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_esic_code',
-            field=models.CharField(blank=True, max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_esic_deduction_rule',
-            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_gst_number',
-            field=models.CharField(blank=True, max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_ifsc_code',
-            field=models.CharField(blank=True, max_length=11),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_name',
-            field=models.CharField(blank=True, max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_ot_rule',
-            field=models.CharField(blank=True, max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_pf_code',
-            field=models.CharField(blank=True, max_length=20),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_pf_deduction',
-            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_service_charge_over_time',
-            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_service_charge_salary',
-            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_welfare_deduction_rule',
-            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
-        ),
-    ]
Index: salary_management/employees/migrations/0001_alter_company_company_contact_person_number.py
===================================================================
diff --git a/salary_management/employees/migrations/0001_alter_company_company_contact_person_number.py b/salary_management/employees/migrations/0001_alter_company_company_contact_person_number.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0001_alter_company_company_contact_person_number.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,18 +0,0 @@
-# Generated by Django 5.1.1 on 2024-10-02 15:40
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', 'employees_create_groups_permissions'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_number',
-            field=models.CharField(max_length=10),
-        ),
-    ]
Index: salary_management/employees/migrations/0015_profile_database.py
===================================================================
diff --git a/salary_management/employees/migrations/0015_profile_database.py b/salary_management/employees/migrations/0015_profile_database.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0015_profile_database.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,18 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-25 09:04
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0014_task_user'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='profile',
-            name='database',
-            field=models.CharField(default='yada yada', max_length=255),
-        ),
-    ]
Index: salary_management/employees/migrations/0013_alter_advancetransaction_mode_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0013_alter_advancetransaction_mode_and_more.py b/salary_management/employees/migrations/0013_alter_advancetransaction_mode_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0013_alter_advancetransaction_mode_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,28 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-21 05:41
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0012_profile_theme_preference'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='advancetransaction',
-            name='mode',
-            field=models.CharField(choices=[('cash', 'Cash'), ('bank', 'Bank')], default='cash', max_length=50),
-        ),
-        migrations.AlterField(
-            model_name='advancetransaction',
-            name='nature',
-            field=models.CharField(choices=[('personal', 'Personal'), ('office', 'Office Expense'), ('company', 'Company Expense')], default='personal', max_length=100),
-        ),
-        migrations.AlterField(
-            model_name='staffsalary',
-            name='father_name',
-            field=models.CharField(blank=True, max_length=100, null=True),
-        ),
-    ]
Index: salary_management/employees/migrations/0011_auto_20241001_2013.py
===================================================================
diff --git a/salary_management/employees/migrations/0011_auto_20241001_2013.py b/salary_management/employees/migrations/0011_auto_20241001_2013.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0011_auto_20241001_2013.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,13 +0,0 @@
-# Generated by Django 5.1.1 on 2024-10-01 14:43
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0010_alter_salary_options'),
-    ]
-
-    operations = [
-    ]
Index: salary_management/employees/migrations/0004_profile_user.py
===================================================================
diff --git a/salary_management/employees/migrations/0004_profile_user.py b/salary_management/employees/migrations/0004_profile_user.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0004_profile_user.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,21 +0,0 @@
-# Generated by Django 5.1.1 on 2024-10-06 05:07
-
-import django.db.models.deletion
-from django.conf import settings
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0003_salary_advance'),
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='profile',
-            name='user',
-            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
-        ),
-    ]
Index: salary_management/employees/migrations/0006_purchaseitem.py
===================================================================
diff --git a/salary_management/employees/migrations/0006_purchaseitem.py b/salary_management/employees/migrations/0006_purchaseitem.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0006_purchaseitem.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,33 +0,0 @@
-# Generated by Django 5.1.1 on 2024-09-26 16:15
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0005_delete_customuser'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='PurchaseItem',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('organization_code', models.CharField(max_length=100)),
-                ('organization_name', models.CharField(max_length=255)),
-                ('gst_number', models.CharField(max_length=15)),
-                ('bill_number', models.CharField(max_length=50)),
-                ('purchased_item', models.CharField(choices=[('Stationary', 'Stationary'), ('Furniture', 'Furniture'), ('Pantry', 'Pantry'), ('Miscellaneous', 'Miscellaneous')], max_length=255)),
-                ('hsn_code', models.CharField(max_length=10)),
-                ('date_of_purchase', models.DateField()),
-                ('per_unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
-                ('units_bought', models.PositiveIntegerField()),
-                ('gross_total', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
-                ('cgst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
-                ('sgst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
-                ('igst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
-                ('net_price', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
-            ],
-        ),
-    ]
Index: salary_management/employees/migrations/0019_company_salary_status.py
===================================================================
diff --git a/salary_management/employees/migrations/0019_company_salary_status.py b/salary_management/employees/migrations/0019_company_salary_status.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0019_company_salary_status.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,18 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-31 09:40
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0018_rename_company_cab_deduction_company_company_pf_deduction'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='company',
-            name='salary_status',
-            field=models.CharField(choices=[('apply', 'Apply'), ('do_not_apply', 'Do Not Apply'), ('wait', 'Wait')], default='wait', max_length=20),
-        ),
-    ]
Index: salary_management/employees/migrations/employees_create_groups_permissions.py
===================================================================
diff --git a/salary_management/employees/migrations/employees_create_groups_permissions.py b/salary_management/employees/migrations/employees_create_groups_permissions.py
deleted file mode 100644
--- a/salary_management/employees/migrations/employees_create_groups_permissions.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,28 +0,0 @@
-# employees/migrations/employees_create_groups_permissions.py
-
-from django.db import migrations
-
-def create_groups_and_permissions(apps, schema_editor):
-    Group = apps.get_model('auth', 'Group')
-    Permission = apps.get_model('auth', 'Permission')
-    ContentType = apps.get_model('contenttypes', 'ContentType')
-    Salary = apps.get_model('employees', 'Salary')
-
-    # Get or create the group
-    admin_group, _ = Group.objects.get_or_create(name='Admin')
-
-    # Get the permission
-    content_type = ContentType.objects.get_for_model(Salary)
-    can_generate_payroll = Permission.objects.get(codename='can_generate_payroll', content_type=content_type)
-
-    # Assign permission to the group
-    admin_group.permissions.add(can_generate_payroll)
-
-class Migration(migrations.Migration):
-    dependencies = [
-        ('employees', '0011_auto_20241001_2013'),  # Replace with your actual migration filename
-    ]
-
-    operations = [
-        migrations.RunPython(create_groups_and_permissions),
-    ]
Index: salary_management/employees/migrations/0005_mymodel_alter_salary_unique_together_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0005_mymodel_alter_salary_unique_together_and_more.py b/salary_management/employees/migrations/0005_mymodel_alter_salary_unique_together_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0005_mymodel_alter_salary_unique_together_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,97 +0,0 @@
-# Generated by Django 5.1.1 on 2024-10-08 13:56
-
-import django.core.validators
-import django.db.models.deletion
-import django.utils.timezone
-from django.conf import settings
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0004_profile_user'),
-        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='MyModel',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
-            ],
-        ),
-        migrations.AlterUniqueTogether(
-            name='salary',
-            unique_together=set(),
-        ),
-        migrations.RemoveField(
-            model_name='profile',
-            name='address',
-        ),
-        migrations.AddField(
-            model_name='profile',
-            name='company',
-            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.company'),
-        ),
-        migrations.AddField(
-            model_name='profile',
-            name='contact_number',
-            field=models.CharField(blank=True, max_length=15, null=True),
-        ),
-        migrations.AddField(
-            model_name='profile',
-            name='gst_number',
-            field=models.CharField(blank=True, max_length=15, null=True),
-        ),
-        migrations.AddField(
-            model_name='profile',
-            name='organisation_address',
-            field=models.TextField(blank=True, null=True),
-        ),
-        migrations.AddField(
-            model_name='profile',
-            name='user_type',
-            field=models.CharField(choices=[('Owner', 'Owner'), ('Manager', 'Manager'), ('Employee', 'Employee')], default='Employee', max_length=10),
-        ),
-        migrations.AlterField(
-            model_name='company',
-            name='company_contact_person_number',
-            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
-        ),
-        migrations.AlterField(
-            model_name='employee',
-            name='basic',
-            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AlterField(
-            model_name='profile',
-            name='account_number',
-            field=models.CharField(blank=True, max_length=20, null=True),
-        ),
-        migrations.AlterField(
-            model_name='profile',
-            name='ifsc_code',
-            field=models.CharField(blank=True, max_length=11, null=True),
-        ),
-        migrations.AlterField(
-            model_name='profile',
-            name='organisation_name',
-            field=models.CharField(blank=True, max_length=255, null=True),
-        ),
-        migrations.AlterField(
-            model_name='profile',
-            name='user',
-            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
-        ),
-        migrations.AlterField(
-            model_name='vendorinformation',
-            name='vendor_contact_person_number',
-            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
-        ),
-        migrations.AddConstraint(
-            model_name='salary',
-            constraint=models.UniqueConstraint(fields=('employee', 'month', 'year'), name='unique_salary_per_month_year'),
-        ),
-    ]
Index: salary_management/employees/migrations/0011_advancetransaction_account_advancetransaction_amount_and_more.py
===================================================================
diff --git a/salary_management/employees/migrations/0011_advancetransaction_account_advancetransaction_amount_and_more.py b/salary_management/employees/migrations/0011_advancetransaction_account_advancetransaction_amount_and_more.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0011_advancetransaction_account_advancetransaction_amount_and_more.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,79 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-11 23:16
-
-import datetime
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0010_advancetransaction_paid_received_account_and_more'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='account',
-            field=models.CharField(blank=True, default=0.0, max_length=50, null=True),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='amount',
-            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='cheque_no',
-            field=models.CharField(blank=True, max_length=50, null=True),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='column1',
-            field=models.CharField(blank=True, max_length=100, null=True),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='company',
-            field=models.CharField(blank=True, default='Shree Hanuman', max_length=100, null=True),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='ifsc_code',
-            field=models.CharField(blank=True, default=0.0, max_length=50, null=True),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='mode',
-            field=models.CharField(default='cash', max_length=50),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='month',
-            field=models.CharField(default=datetime.datetime.now, max_length=20),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='name',
-            field=models.CharField(default='unknown', max_length=100),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='nature',
-            field=models.CharField(default='personal', max_length=100),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='net_amount',
-            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='paid_received',
-            field=models.CharField(choices=[('paid', 'Paid'), ('received', 'Received')], default='paid', max_length=10),
-        ),
-        migrations.AddField(
-            model_name='advancetransaction',
-            name='serial_number',
-            field=models.IntegerField(default=1),
-        ),
-    ]
Index: salary_management/employees/migrations/0005_delete_customuser.py
===================================================================
diff --git a/salary_management/employees/migrations/0005_delete_customuser.py b/salary_management/employees/migrations/0005_delete_customuser.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0005_delete_customuser.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,16 +0,0 @@
-# Generated by Django 5.1.1 on 2024-09-26 08:14
-
-from django.db import migrations
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0004_customuser'),
-    ]
-
-    operations = [
-        migrations.DeleteModel(
-            name='CustomUser',
-        ),
-    ]
Index: salary_management/employees/migrations/0020_alter_company_salary_status_companyrule.py
===================================================================
diff --git a/salary_management/employees/migrations/0020_alter_company_salary_status_companyrule.py b/salary_management/employees/migrations/0020_alter_company_salary_status_companyrule.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0020_alter_company_salary_status_companyrule.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,28 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-31 11:35
-
-import django.db.models.deletion
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0019_company_salary_status'),
-    ]
-
-    operations = [
-        migrations.AlterField(
-            model_name='company',
-            name='salary_status',
-            field=models.CharField(choices=[('apply', 'Apply'), ('do_not_apply', 'Do Not Apply'), ('wait', 'Wait')], default='apply', max_length=20),
-        ),
-        migrations.CreateModel(
-            name='CompanyRule',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('rule_name', models.CharField(max_length=10)),
-                ('status', models.CharField(choices=[('apply', 'Apply'), ('do_not_apply', 'Do Not Apply'), ('wait', 'Wait')], default='apply', max_length=20)),
-                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='employees.company')),
-            ],
-        ),
-    ]
Index: salary_management/employees/migrations/0012_profile_theme_preference.py
===================================================================
diff --git a/salary_management/employees/migrations/0012_profile_theme_preference.py b/salary_management/employees/migrations/0012_profile_theme_preference.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0012_profile_theme_preference.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,18 +0,0 @@
-# Generated by Django 5.1.2 on 2024-10-11 23:47
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0011_advancetransaction_account_advancetransaction_amount_and_more'),
-    ]
-
-    operations = [
-        migrations.AddField(
-            model_name='profile',
-            name='theme_preference',
-            field=models.CharField(default='light', max_length=10),
-        ),
-    ]
Index: salary_management/employees/migrations/0008_company.py
===================================================================
diff --git a/salary_management/employees/migrations/0008_company.py b/salary_management/employees/migrations/0008_company.py
deleted file mode 100644
--- a/salary_management/employees/migrations/0008_company.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ /dev/null	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
@@ -1,27 +0,0 @@
-# Generated by Django 5.1.1 on 2024-09-30 06:56
-
-from django.db import migrations, models
-
-
-class Migration(migrations.Migration):
-
-    dependencies = [
-        ('employees', '0007_vendorinformation_purchaseitem_category_and_more'),
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Company',
-            fields=[
-                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('company_code', models.CharField(default=0, max_length=4)),
-                ('company_name', models.CharField(default='', max_length=100)),
-                ('company_address', models.TextField()),
-                ('company_gst_number', models.CharField(max_length=20)),
-                ('company_account_number', models.CharField(max_length=20)),
-                ('company_ifsc_code', models.CharField(max_length=11)),
-                ('company_contact_person_name', models.CharField(max_length=100)),
-                ('company_contact_person_number', models.CharField(max_length=100)),
-            ],
-        ),
-    ]
Index: salary_management/employees/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from decimal import Decimal\r\nfrom sqlite3 import IntegrityError\r\nfrom sys import prefix\r\n\r\nfrom django.core.exceptions import ValidationError, PermissionDenied\r\nfrom django.shortcuts import render, redirect, get_object_or_404\r\nfrom django.db.models import Q, Sum\r\nfrom django.utils import timezone\r\nfrom django.http import HttpResponse, JsonResponse\r\nfrom django.contrib import messages\r\nfrom django.contrib.auth.decorators import login_required, permission_required, user_passes_test\r\nfrom django.contrib.auth.mixins import PermissionRequiredMixin\r\nfrom django.contrib.auth.forms import UserCreationForm, AuthenticationForm\r\nfrom django.contrib.auth import login, logout, authenticate\r\nfrom django.contrib.auth.models import Group, User\r\nfrom django.db import IntegrityError, transaction\r\nimport pandas as pd\r\nfrom django.views import View\r\nfrom django.views.generic import ListView\r\nfrom datetime import datetime\r\nfrom django.views.decorators.csrf import csrf_exempt\r\nimport json\r\nimport csv\r\n\r\nfrom openpyxl.utils.datetime import days_to_time\r\n\r\n# Import your models and forms\r\nfrom .models import (Employee, Salary, Task, Profile, Payment, PurchaseItem, VendorInformation, Company,\r\n                     StaffSalary, AdvanceTransaction, SalaryRule)\r\nfrom .forms import (EmployeeForm, TaskForm, ExcelUploadForm, PaymentForm, PurchaseItemForm, VendorInformationForm,\r\n                    CompanyForm, AddCompanyForm, EmployeeSearchForm, CustomUserCreationForm, StaffSalaryForm,\r\n                    AdvanceTransactionForm, ProfileEditForm, LoginForm, SalaryRuleFormSet)\r\n\r\n\r\ndef get_user_role_flags(user):\r\n    \"\"\"\r\n    Helper function to check user role flags.\r\n    Returns a dictionary with boolean flags for `is_superuser`, `is_read_write`, and `is_read_only`.\r\n    \"\"\"\r\n    is_superuser = user.is_superuser\r\n    is_read_write = user.groups.filter(name='Read and Write').exists()\r\n    is_read_only = user.groups.filter(name='Read Only').exists()\r\n\r\n    return {\r\n        'is_superuser': is_superuser,\r\n        'is_read_write': is_read_write,\r\n        'is_read_only': is_read_only\r\n    }\r\n\r\n@login_required\r\ndef superuser_view(request):\r\n    role_flags = get_user_role_flags(request.user)\r\n\r\n    if not role_flags['is_superuser']:\r\n        raise PermissionDenied  # Restrict access to non-superusers\r\n\r\n    return render(request, 'employees/home.html', role_flags)\r\n\r\n@login_required\r\ndef read_write_view(request):\r\n    role_flags = get_user_role_flags(request.user)\r\n\r\n    if not role_flags['is_read_write']:\r\n        raise PermissionDenied  # Restrict access to non-read-write users\r\n\r\n    return render(request, 'employees/read_write_dashboard.html', role_flags)\r\n\r\n@login_required\r\ndef read_only_view(request):\r\n    role_flags = get_user_role_flags(request.user)\r\n\r\n    if not role_flags['is_read_only']:\r\n        raise PermissionDenied  # Restrict access to non-read-only users\r\n\r\n    return render(request, 'employees/read_only_dashboard.html', role_flags)\r\n\r\n\r\n@login_required\r\ndef manage_user_permissions(request):\r\n    if not request.user.is_superuser:\r\n        return redirect('employees:home')  # Only superuser can access this view\r\n\r\n    if request.method == 'POST':\r\n        user_id = request.POST.get('user_id')\r\n        group_name = request.POST.get('group_name')\r\n\r\n        try:\r\n            user = User.objects.get(id=user_id)\r\n            group = Group.objects.get(name=group_name)\r\n        except User.DoesNotExist:\r\n            messages.error(request, \"User not found.\")\r\n            return redirect('employees:manage_user_permissions')\r\n        except Group.DoesNotExist:\r\n            messages.error(request, \"Group not found.\")\r\n            return redirect('employees:manage_user_permissions')\r\n\r\n        # Option to grant/revoke superuser status\r\n        if request.POST.get('superuser_status') == 'on':\r\n            user.is_superuser = True\r\n            user.is_staff = True\r\n        else:\r\n            user.is_superuser = False\r\n            user.is_staff = False\r\n\r\n        user.save()  # Save user status changes\r\n\r\n        # Update user's groups\r\n        try:\r\n            user.groups.clear()  # Remove from all groups\r\n            user.groups.add(group)  # Assign the new group\r\n        except Exception as e:\r\n            messages.error(request, f\"An error occurred: {e}\")\r\n            return redirect('employees:manage_user_permissions')\r\n\r\n        messages.success(request, f\"Permissions updated for {user.username}\")\r\n        return redirect('employees:manage_user_permissions')\r\n\r\n    users = User.objects.all()\r\n    groups = Group.objects.all()\r\n    context = {'users': users, 'groups': groups}\r\n    return render(request, 'employees/manage_permissions.html', context)\r\n\r\n@login_required\r\n@csrf_exempt\r\ndef save_theme_preference(request):\r\n    if request.method == 'POST':\r\n        data = json.loads(request.body)\r\n        theme = data.get('theme', 'light')\r\n\r\n        # Update the user's profile\r\n        user_profile = request.user.userprofile\r\n        user_profile.theme_preference = theme\r\n        user_profile.save()\r\n\r\n        return JsonResponse({'success': True})\r\n    return JsonResponse({'success': False}, status=400)\r\n\r\n@login_required\r\ndef settings_view(request):\r\n    return render(request, 'employees/settings.html')\r\n\r\n# views.py\r\n@login_required\r\ndef staff_salary_detail(request, pk):\r\n    salary = get_object_or_404(StaffSalary, pk=pk)\r\n\r\n    if request.method == 'POST':\r\n        form = AdvanceTransactionForm(request.POST)\r\n        if form.is_valid():\r\n            new_transaction = form.save(commit=False)\r\n            new_transaction.staff_salary = salary\r\n            new_transaction.save()\r\n            return redirect('employees:staff_salary_detail', pk=pk)\r\n    else:\r\n        form = AdvanceTransactionForm()\r\n\r\n    transactions = salary.transactions.all().order_by('-date')\r\n\r\n    return render(request, 'employees/staff_salary_detail.html', {\r\n        'salary': salary,\r\n        'transactions': transactions,\r\n        'form': form,\r\n    })\r\n\r\n\r\n@login_required\r\ndef edit_transaction(request, pk):\r\n    transaction = get_object_or_404(AdvanceTransaction, pk=pk)\r\n    salary = transaction.staff_salary\r\n\r\n    if request.method == 'POST':\r\n        form = AdvanceTransactionForm(request.POST, instance=transaction)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('employees:staff_salary_detail', pk=salary.pk)\r\n    else:\r\n        form = AdvanceTransactionForm(instance=transaction)\r\n\r\n    return render(request, 'employees/edit_transaction.html', {\r\n        'form': form,\r\n        'salary': salary,\r\n        'transaction': transaction,\r\n    })\r\n\r\n\r\n# Registering a user with unique username validation\r\ndef register_view(request):\r\n    if request.method == 'POST':\r\n        form = CustomUserCreationForm(request.POST)\r\n        if form.is_valid():\r\n            try:\r\n                user = form.save()\r\n\r\n                # Profile creation and assigning group based on user type\r\n                profile = Profile.objects.create(\r\n                    user=user,\r\n                    user_type=form.cleaned_data['user_type'],\r\n                    company=form.cleaned_data.get('company_name', None)\r\n                )\r\n\r\n                if profile.user_type == 'Owner':\r\n                    # Assign Owner-specific fields directly to profile\r\n                    profile.organisation_name = form.cleaned_data.get('organisation_name', \"\")\r\n                    profile.organisation_address = form.cleaned_data.get('organisation_address', \"\")\r\n                    profile.contact_number = form.cleaned_data.get('contact_number', \"\")\r\n                    profile.account_number = form.cleaned_data.get('account_number', \"\")\r\n                    profile.ifsc_code = form.cleaned_data.get('ifsc_code', \"\")\r\n                    profile.gst_number = form.cleaned_data.get('gst_number', \"\")\r\n                    profile.save()\r\n\r\n                    # Add owner group permissions\r\n                    owner_group = Group.objects.get(name='Owner')\r\n                    user.groups.add(owner_group)\r\n\r\n                elif profile.user_type == 'Manager':\r\n                    manager_group = Group.objects.get(name='Manager')\r\n                    user.groups.add(manager_group)\r\n                else:\r\n                    employee_group = Group.objects.get(name='Employee')\r\n                    user.groups.add(employee_group)\r\n\r\n                login(request, user)\r\n                messages.success(request, \"Registration successful! You are now logged in.\")\r\n                return redirect('employees:home')\r\n\r\n            except IntegrityError:\r\n                form.add_error('username', 'Username already exists. Please try another.')\r\n                messages.error(request, 'Username already exists. Please try again.')\r\n    else:\r\n        form = CustomUserCreationForm()\r\n\r\n    return render(request, 'employees/register.html', {'form': form})\r\n\r\n\r\n\r\n# Logging in a user\r\ndef login_view(request):\r\n    if request.method == 'POST':\r\n        form = LoginForm(request, data=request.POST)\r\n        if form.is_valid():\r\n            company = form.cleaned_data.get('company_name')\r\n            username = form.cleaned_data.get('username')\r\n            password = form.cleaned_data.get('password')\r\n\r\n            # Authenticate the user\r\n            user = authenticate(request, username=username, password=password)\r\n\r\n            if user is not None:\r\n                # Verify that the user belongs to the selected company\r\n                if user.profile.company == company:\r\n                    login(request, user)\r\n                    return redirect('employees:home')\r\n                else:\r\n                    # Show error if user is not associated with the selected company\r\n                    form.add_error(None, \"This account is not associated with the selected company.\")\r\n            else:\r\n                # Show generic error for failed authentication\r\n                form.add_error(None, \"Invalid username or password.\")\r\n    else:\r\n        form = LoginForm()\r\n\r\n    return render(request, 'employees/login.html', {'form': form})\r\n\r\ndef logout_view(request):\r\n    logout(request)\r\n    return redirect('employees:login')\r\n\r\n@login_required\r\ndef user_profile_detail(request):\r\n    user = request.user\r\n    try:\r\n        profile = user.profile  # Get the user's profile\r\n    except Profile.DoesNotExist:\r\n        profile = Profile.objects.create(user=user) # If profile does not exist, create a new one for the user\r\n\r\n\r\n    # Handle the form submission for editing the profile\r\n    if request.method == 'POST':\r\n        # If it's a POST request, process the form and update the profile\r\n        form = ProfileEditForm(request.POST, instance=profile)  # Bind the form with POST data\r\n        if form.is_valid():\r\n            form.save() # Save the updated profile information\r\n            messages.success(request, \"Profile updated successfully!\")\r\n            return redirect('user_profile_detail')  # Refresh page after successful update\r\n    else:\r\n        # If it's a GET request, display the form with the current profile data\r\n        form = ProfileEditForm(instance=profile)  # Pre-fill form with current profile data\r\n\r\n    context = {\r\n        'profile': profile,\r\n        'form': form,\r\n        'is_superuser': user.groups.filter(name='Superuser').exists(),\r\n        'is_read_write': user.groups.filter(name='Read and Write').exists(),\r\n        'is_read_only': user.groups.filter(name='Read Only').exists(),\r\n    }\r\n    return render(request, 'employees/user_profile_detail.html', context)\r\n\r\n\r\n\r\n# Admin Dashboard\r\ndef admin_dashboard(request):\r\n    # Total employees, total salary, and data for chart\r\n    total_employees = Employee.objects.count()\r\n    total_salary = Salary.objects.aggregate(Sum('net_salary'))['net_salary__sum']\r\n\r\n    months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October',\r\n              'November', 'December']\r\n\r\n    salary_data = [...]  # Salary data per month\r\n    employees_data = [...]  # Employees count per month\r\n    purchases_data = [...]  # Purchases amount per month\r\n\r\n    recent_salaries = Salary.objects.order_by('-date_generated')[:10]  # Latest 10 salaries\r\n\r\n    context = {\r\n        'total_employees': total_employees,\r\n        'total_salary': total_salary,\r\n        'recent_salaries': recent_salaries,\r\n        'months': months,\r\n        'salary_data': salary_data,\r\n        'employees_data': employees_data,\r\n        'purchases_data': purchases_data\r\n    }\r\n\r\n    return render(request, 'employees/admin_dashboard.html', context)\r\n\r\n\r\n# Home page with tasks\r\ndef home(request):\r\n    total_employees = Employee.objects.count()\r\n    tasks = Task.objects.filter(user=request.user)\r\n    users = User.objects.all() # Get all users for the transfer dropdown\r\n\r\n    if request.method == 'POST':\r\n        form = TaskForm(request.POST)\r\n        if form.is_valid():\r\n            task = form.save(commit=False)\r\n            task.user = request.user # Assign the task to the current user\r\n            form.save()\r\n            return redirect('employees:home')\r\n    else:\r\n        form = TaskForm()\r\n\r\n    context = {\r\n        'total_employees': total_employees,\r\n        'tasks': tasks,\r\n        'users': users, # PAss users for the transfer dropdown\r\n        'form': form\r\n    }\r\n    return render(request, 'employees/home.html', context)\r\n\r\n\r\ndef add_task(request):\r\n    if request.method == 'POST':\r\n        title = request.POST.get('title')\r\n        Task.objects.create(title=title, user=request.user) #Associated task with logged-in user\r\n    return redirect('employees:home')\r\n\r\ndef complete_task(request, task_id):\r\n    task = get_object_or_404(Task, id=task_id)\r\n    task.completed = not task.completed\r\n    task.save()\r\n    return redirect('employees:home')\r\n\r\ndef delete_task(request, task_id):\r\n    task = get_object_or_404(Task, id=task_id)\r\n    task.delete()\r\n    return redirect('employees:home')\r\n\r\ndef transfer_task(request, task_id):\r\n    task = get_object_or_404(Task, id=task_id)\r\n    if request.method == 'POST':\r\n        new_user_id = request.POST.get('user')\r\n        new_user = get_object_or_404(User, id=new_user_id)\r\n        task.user = new_user\r\n        task.save()\r\n        messages.success(request, f'Task transferred to {new_user.username}.')\r\n    return redirect('employees:home')\r\n\r\n\r\nclass EmployeeListView(ListView):\r\n    model = Employee\r\n    template_name = 'employee_list.html'\r\n    context_object_name = 'employees'\r\n    paginate_by = 10 # number of employees shown on each page\r\n\r\n    def get_queryset(self):\r\n        search_query = self.request.GET.get('search', '')\r\n        queryset = Employee.objects.all()\r\n\r\n        if search_query:\r\n            queryset = queryset.filter(\r\n                Q(employee_code__icontains=search_query) |\r\n                Q(name__icontains=search_query)\r\n            )\r\n        return queryset\r\n\r\n        # Pagination logic\r\n        page = self.request.GET.get('page', 1)\r\n        paginator = Paginator(self.get_queryset(), self.paginate_by)\r\n\r\n        try:\r\n            employees = paginator.page(page)\r\n        except PageNotAnInteger:\r\n            employees = paginator.page(1)\r\n        except EmptyPage:\r\n            employees = paginator.page(paginator.num_pages)\r\n\r\n        context['employees'] = employees\r\n        return context\r\n\r\n    def get_context_data(self, **kwargs):\r\n        context = super().get_context_data(**kwargs)\r\n        context['search_query'] = self.request.GET.get('search', '')\r\n        return context\r\n\r\ndef employee_detail(request, id):\r\n    employee = get_object_or_404(Employee, id=id)\r\n    return render(request, 'employee_details.html', {'employee': employee})\r\n\r\n\r\nclass AddEmployeeAndUploadView(View):\r\n    def get(self, request):\r\n        return render(request, 'employees/add_employee.html', {\r\n            'add_employee_form': EmployeeForm(),\r\n            'upload_form': ExcelUploadForm(),\r\n        })\r\n\r\n    def post(self, request):\r\n        if request.POST.get('submit_type') == 'add_employee':\r\n            form = EmployeeForm(request.POST)\r\n            if form.is_valid():\r\n                form.save()\r\n                messages.success(request, 'Employee added successfully!')\r\n                return redirect('employees:employee_list')\r\n            else:\r\n                messages.error(request, 'Failed to add employee. Please check the form.')\r\n\r\n        elif request.POST.get('submit_type') == 'upload_employees':\r\n            form = ExcelUploadForm(request.POST, request.FILES)\r\n            if form.is_valid():\r\n                try:\r\n                    handle_file_upload(request.FILES['file'])\r\n                    messages.success(request, 'Employees uploaded successfully!')\r\n                except ValidationError as e:\r\n                    messages.error(request, f\"File upload failed: {', '.join(e.messages)}\")\r\n                return redirect('employees:employee_list')\r\n\r\n        return self.get(request)\r\n\r\ndef handle_file_upload(file):\r\n    errors = []\r\n    try:\r\n        df = pd.read_excel(file)\r\n\r\n        required_columns = ['employee_code', 'name', 'father_name', 'basic', 'transport', 'canteen', 'pf', 'esic', 'advance']\r\n        for col in required_columns:\r\n            if col not in df.columns:\r\n                raise ValidationError(f\"Missing required column: {col}\")\r\n\r\n        for _, row in df.iterrows():\r\n            try:\r\n                employee_code = str(row['employee_code']).strip()\r\n                name = str(row['name']).strip()\r\n                father_name = str(row['father_name']).strip()\r\n                basic = Decimal(row['basic'])\r\n                transport = Decimal(row.get('transport', 0))\r\n                canteen = Decimal(row.get('canteen', 0))\r\n                pf = Decimal(row.get('pf', 0))\r\n                esic = Decimal(row.get('esic', 0))\r\n                advance = Decimal(row.get('advance', 0))\r\n\r\n                if Employee.objects.filter(employee_code=employee_code).exists():\r\n                    continue\r\n\r\n                Employee.objects.create(\r\n                    employee_code=employee_code,\r\n                    name=name,\r\n                    father_name=father_name,\r\n                    basic=basic,\r\n                    transport=transport,\r\n                    canteen=canteen,\r\n                    pf=pf,\r\n                    esic=esic,\r\n                    advance=advance\r\n                )\r\n            except Exception as e:\r\n                errors.append(f\"Error processing row: {row}. Error: {e}\")\r\n                continue\r\n    except Exception as e:\r\n        raise ValidationError(f\"Error processing file: {e}\")\r\n\r\n    if errors:\r\n        raise ValidationError(errors)\r\n\r\n\r\nfrom django.core.exceptions import ValidationError\r\n\r\ndef handle_file_upload(file):\r\n    errors = []\r\n    try:\r\n        df = pd.read_excel(file)\r\n\r\n        required_columns = ['employee_code', 'name', 'father_name', 'basic', 'transport', 'canteen', 'pf', 'esic', 'advance']\r\n        for col in required_columns:\r\n            if col not in df.columns:\r\n                raise ValidationError(f\"Missing required column: {col}\")\r\n\r\n        for _, row in df.iterrows():\r\n            try:\r\n                # Basic validation for each row\r\n                employee_code = str(row['employee_code']).strip()\r\n                name = str(row['name']).strip()\r\n                father_name = str(row['father_name']).strip()\r\n\r\n                basic = Decimal(row['basic']) if pd.notnull(row['basic']) else Decimal('0.00')\r\n                transport = Decimal(row.get('transport', 0))\r\n                canteen = Decimal(row.get('canteen', 0))\r\n                pf = Decimal(row.get('pf', 0))\r\n                esic = Decimal(row.get('esic', 0))\r\n                advance = Decimal(row.get('advance', 0))\r\n\r\n                if Employee.objects.filter(employee_code=employee_code).exists():\r\n                    errors.append(f\"Employee with code {employee_code} already exists.\")\r\n                    continue\r\n\r\n                Employee.objects.create(\r\n                    employee_code=employee_code,\r\n                    name=name,\r\n                    father_name=father_name,\r\n                    basic=basic,\r\n                    transport=transport,\r\n                    canteen=canteen,\r\n                    pf=pf,\r\n                    esic=esic,\r\n                    advance=advance\r\n                )\r\n            except ValueError as ve:\r\n                errors.append(f\"Invalid value in row: {row}. Error: {ve}\")\r\n            except Exception as e:\r\n                errors.append(f\"Error processing row: {row}. Error: {e}\")\r\n                continue\r\n    except Exception as e:\r\n        raise ValidationError(f\"Error processing file: {e}\")\r\n\r\n    if errors:\r\n        raise ValidationError(errors)\r\n\r\n\r\nclass GenerateSalaryView(PermissionRequiredMixin, View):\r\n    permission_required = 'employees.can_generate_payroll'\r\n\r\n    @transaction.atomic\r\n    def post(self, request):\r\n        month, year, days_in_month = self.get_salary_params(request)\r\n        if not month or not year or not days_in_month:\r\n            messages.error(request, 'Please provide all inputs.')\r\n            return redirect('employees:generate_salary')\r\n\r\n        employees = Employee.objects.all().select_related()  # Efficiently fetch related data\r\n        salary_data, total_gross_salary, total_pf, total_esic, total_canteen, total_advance, total_net_salary = self.calculate_salaries(\r\n            request, employees, int(days_in_month), int(month), int(year)\r\n        )\r\n\r\n        messages.success(request, 'Salary generated successfully!')\r\n        return render(request, 'employees/salary_report.html', {\r\n            'salary_data': salary_data,\r\n            'total_gross_salary': total_gross_salary,\r\n            'total_pf': total_pf,\r\n            'total_esic': total_esic,\r\n            'total_canteen': total_canteen,\r\n            'total_advance': total_advance,\r\n            'total_net_salary': total_net_salary,\r\n            'month': month,\r\n            'year': year\r\n        })\r\n\r\n    def get_salary_params(self, request):\r\n        month = request.POST.get('month')\r\n        year = request.POST.get\r\n        days_in_month =request.POST.get('days_in_month')\r\n\r\n        if not month or not year or not days_in_month:\r\n            return None, None, None # This will trigger an error message\r\n        return month, year, days_in_month\r\n\r\n    def calculate_salaries(self, request, employees, days_in_month, month, year):\r\n        salary_data = []\r\n        total_gross_salary = total_pf = total_esic = total_canteen = total_advance = total_net_salary = Decimal(0.00)\r\n\r\n        for employee in employees:\r\n            try:\r\n                days_worked = int(request.POST.get(f'days_worked_{employee.id}', 0))\r\n                advance = Decimal(request.POST.get(f'advance_{employee.id}', 0))\r\n\r\n                # calculate gross salary, net salary, pf, esic, and canteen\r\n                gross_salary, net_salary, pf, esic, canteen = self.calculate_salary(employee, days_worked, days_in_month)\r\n                net_salary -= advance\r\n\r\n                # Update or create salary record\r\n                Salary.objects.update_or_create(\r\n                    employee=employee, month=month, year=year,\r\n                    defaults={'gross_salary': gross_salary, 'net_salary': net_salary, 'advance': advance}\r\n                )\r\n\r\n                # Append salary data for each employee\r\n                salary_data.append({\r\n                    'employee_code': employee.employee_code,\r\n                    'name': employee.name,\r\n                    'gross_salary': gross_salary,\r\n                    'pf': pf,\r\n                    'esic': esic,\r\n                    'canteen': canteen,\r\n                    'advance': advance,\r\n                    'net_salary': net_salary\r\n                })\r\n\r\n                # Calculate totals for each column\r\n                total_gross_salary += gross_salary\r\n                total_pf += pf\r\n                total_esic += esic\r\n                total_canteen += canteen\r\n                total_advance += advance\r\n                total_net_salary += net_salary\r\n            except Exception as e:\r\n                # Log the error for debugging\r\n                print(f\"Error calculating salary for {employee.name}:e\")\r\n                messages.error(request, f\"Error calculating salary for {employee.name}.\")\r\n        return salary_data, total_gross_salary, total_pf, total_esic, total_canteen, total_advance, total_net_salary\r\n\r\n\r\ndef download_template(request):\r\n    # Define columns for the template\r\n    columns = ['employee_code', 'name', 'father_name', 'basic', 'transport', 'canteen', 'pf', 'esic', 'advance']\r\n    df = pd.DataFrame(columns=columns)\r\n\r\n    # Create a response object for downloading the Excel file\r\n    response = HttpResponse(content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')\r\n    response['Content-Disposition'] = 'attachment; filename=employee_upload_template.xlsx'\r\n\r\n    # Write the empty dataframe to Excel and serve as a download\r\n    df.to_excel(response, index=False)\r\n    return response\r\n\r\n\r\ndef employee_detail(request):\r\n    form = EmployeeSearchForm()\r\n    employee = None\r\n    salaries = None\r\n    not_found = False # Flag to indicate if no record was found\r\n\r\n    if request.method == 'GET':\r\n        query = request.GET.get('employee_code_or_name')\r\n        if query:\r\n            employee = Employee.objects.filter(employee_code__iexact=query).first() or Employee.objects.filter(name__iexact=query).first()\r\n\r\n            if employee:\r\n                salaries = Salary.objects.filter(employee=employee).order_by('-month')\r\n            else:\r\n                not_found = True # Set the flag if no employee was found\r\n\r\n    context = {\r\n        'form': form,\r\n        'employee': employee,\r\n        'salaries': salaries,\r\n        'not_found': not_found # pass the flag to the template\r\n    }\r\n    return render(request, 'employees/employee_detail.html', context)\r\n\r\n@login_required\r\n@user_passes_test(lambda u: u.is_superuser)\r\ndef delete_employee(request, employee_id):\r\n    employee = get_object_or_404(Employee, id=employee_id)\r\n\r\n    if request.method == 'POST':  # Confirm the deletion with a POST request\r\n        employee.delete()\r\n        messages.success(request, f'Employee {employee.name} has been successfully deleted.')\r\n        return redirect('employees:employee_list')  # Redirect to employee list after deletion\r\n    return render(request, 'employees/employee_confirm_delete.html', {'employee': employee})\r\n\r\n\r\n@login_required\r\n@user_passes_test(lambda u: u.is_superuser)\r\ndef delete_multiple_employees(request):\r\n    if request.method == 'POST':\r\n        employee_ids = request.POST.getlist('employee_ids')  # Get list of selected employee IDs\r\n        if employee_ids:\r\n            employees = Employee.objects.filter(id__in=employee_ids)\r\n            employees_deleted = employees.count()\r\n            employees.delete()\r\n            messages.success(request, f'{employees_deleted} employee(s) successfully deleted.')\r\n        else:\r\n            messages.warning(request, 'No employees selected for deletion.')\r\n\r\n    return redirect('employees:employee_list')\r\n\r\n\r\ndef salary_list(request):\r\n    # Get the selected month and year from the request\r\n    month = request.GET.get('month', '') # Default to ''(empty) for \"All\"\r\n    year = request.GET.get('year', '')\r\n\r\n    # Filter salaries based on month and year\r\n    salaries = Salary.objects.all()\r\n\r\n    if month:\r\n        salaries = salaries.filter(month=month)\r\n    if year:\r\n        salaries = salaries.filter(year=year)\r\n\r\n    # Calculate total number of unique employees\r\n    total_employees = salaries.values('employee_id').distinct().count()\r\n\r\n    # Calculate totals for each column\r\n    totals = salaries.aggregate(\r\n        total_basic_salary=Sum('basic_salary'),\r\n        total_transport=Sum('transport'),\r\n        total_canteen=Sum('canteen'),\r\n        total_pf=Sum('pf'),\r\n        total_esic=Sum('esic'),\r\n        total_advance=Sum('advance_deduction'),\r\n        total_gross_salary=Sum('gross_salary'),\r\n        total_net_salary=Sum('net_salary')\r\n    )\r\n\r\n    # Provide the necessary context to the template\r\n    month_choices = [\r\n        (1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'),\r\n        (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'),\r\n        (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')\r\n    ]\r\n\r\n    context = {\r\n        'salaries': salaries,\r\n        'month_choices' : month_choices,\r\n        'month': month,\r\n        'year': year,\r\n        'total_employees': total_employees,\r\n        'totals': totals\r\n    }\r\n    return render(request, 'employees/salary_list.html', context)\r\n\r\n# Download Salary List as CSV\r\ndef download_salary_csv(request):\r\n    # Get the selected month and year from query parameters\r\n    month = request.GET.get('month', '')\r\n    year = request.GET.get('year', '')\r\n\r\n    # Filter salaries based on month and year\r\n    salaries = Salary.objects.all()\r\n    if year:\r\n        salaries = salaries.filter(year=year)\r\n    if month:\r\n        salaries = salaries.filter(month=month)\r\n\r\n    # Create the HttpResponse object with the appropriate CSV header.\r\n    response = HttpResponse(content_type='text/csv')\r\n    response['Content-Disposition'] = f'attachment; filename=\"salaries_{month}_{year}.csv\"'\r\n\r\n    # Create a CSV writer\r\n    writer = csv.writer(response)\r\n    # Write the header row\r\n    writer.writerow([\r\n        'Employee Name', 'Month', 'Year', 'Basic Salary', 'Transport', 'Canteen', 'PF', 'ESIC', 'Advance Deduction', 'Gross Salary', 'Net Salary' ])\r\n\r\n    # Write the data rows\r\n    for salary in salaries:\r\n        writer.writerow([\r\n            salary.employee.name,\r\n            salary.get_month_display(),\r\n            salary.year,\r\n            f\"{salary.basic_salary:.2f}\",\r\n            f\"{salary.transport:.2f}\",\r\n            f\"{salary.canteen:.2f}\",\r\n            f\"{salary.pf:.2f}\",\r\n            f\"{salary.esic:.2f}\",\r\n            f\"{salary.advance_deduction:.2f}\",\r\n            f\"{salary.gross_salary:.2f}\",\r\n            f\"{salary.net_salary:.2f}\",\r\n        ])\r\n\r\n    return response\r\n\r\n\r\n# Handle form submission for adding and editing\r\ndef handle_form_submission(request, form_class, redirect_url, template_name, context, instance=None):\r\n    if request.method == 'POST':\r\n        form = form_class(request.POST, instance=instance)  # Use instance if editing\r\n        if form.is_valid():\r\n            form.save()\r\n            if instance:\r\n                messages.success(request, \"Payment details updated successfully!\")\r\n            else:\r\n                messages.success(request, \"Payment entry added successfully!\")\r\n            return redirect(redirect_url)\r\n    else:\r\n        form = form_class(instance=instance)  # Populate the form with instance if editing\r\n\r\n    context['form'] = form\r\n    return render(request, template_name, context)\r\n\r\n# Handle payment input and listing payments\r\ndef payment_input(request):\r\n    payments = Payment.objects.all()\r\n    context = {'payments': payments}\r\n    return handle_form_submission(request, PaymentForm, 'employees:payment_input', 'employees/payment_input.html', context)\r\n\r\n# Handle payment edit\r\ndef edit_payment(request, payment_id):\r\n    payment = get_object_or_404(Payment, id=payment_id)\r\n    payments = Payment.objects.all()\r\n    context = {'payments': payments}\r\n    return handle_form_submission(request, PaymentForm, 'employees:payment_input', 'employees/payment_input.html', context, instance=payment)\r\n\r\n# Handle payment delete\r\ndef delete_payment(request, payment_id):\r\n    payment = get_object_or_404(Payment, id=payment_id)\r\n    payment.delete()\r\n    messages.success(request, \"Payment entry deleted successfully!\")\r\n    return redirect('employees:payment_input')\r\n\r\n\r\n# Purchase information\r\ndef purchase_item_input(request):\r\n    purchases = PurchaseItem.objects.all()\r\n    return handle_form_submission(request, PurchaseItemForm, 'employees:purchase_item_input', 'employees/purchase_item_input.html', {'purchases': purchases})\r\n\r\n# Vendor information and profile\r\ndef vendor_information_input(request):\r\n    if request.method == 'POST':\r\n        form = VendorInformationForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('employees:vendor_information_input')\r\n    else:\r\n        form = VendorInformationForm()\r\n\r\n    vendor_information = VendorInformation.objects.all()\r\n\r\n    return render(request, 'employees/vendor_information_input.html', {'form': form, 'vendor_information': vendor_information})\r\n\r\n\r\ndef company_list(request):\r\n    # Search functionality\r\n    query = request.GET.get('q', '')\r\n    companies = Company.objects.filter(company_name__icontains=query) if query else Company.objects.all()\r\n\r\n    company_forms = {}\r\n    salary_rule_formsets = {}\r\n\r\n    # Define default values for salary rules\r\n    default_salary_rule_data = [\r\n        {\r\n            'standard_head': 'Basic Salary',\r\n            'Basic_rate_type': 'Per Month',\r\n            'Basic_pay_type': 'PayDay',\r\n            'Sr_All_rate_type': 'Per Month',\r\n            'Sr_All_pay_type': 'PayDay',\r\n            'DA_rate_type': 'Per Month',\r\n            'DA_pay_type': 'PayDay',\r\n            # Add other default fields here as needed\r\n        }\r\n    ]\r\n\r\n    if request.method == 'POST':\r\n        # Handle form submission (Add or Update)\r\n        if 'add_company' in request.POST:\r\n            company_form = CompanyForm(request.POST)\r\n            if company_form.is_valid():\r\n                company = company_form.save()\r\n                messages.success(request, \"Company added successfully!\")\r\n                return redirect('employees:company_list')\r\n\r\n        elif 'update_salary_rules' in request.POST:\r\n            company_id = request.POST.get('company_id')\r\n            company = get_object_or_404(Company, id=company_id)\r\n            formset = SalaryRuleFormSet(request.POST, queryset=company.salary_rules.all(), prefix=str(company.id))\r\n            if formset.is_valid():\r\n                salary_rules = formset.save(commit=False)\r\n                for rule in salary_rules:\r\n                    rule.company = company\r\n                    rule.save()\r\n                messages.success(request, \"Salary rules updated successfully!\")\r\n                return redirect('employees:company_list')\r\n\r\n    # Initialize forms and formsets for each company (for both GET and POST requests)\r\n    for company in companies:\r\n        company_forms[company.id] = CompanyForm(instance=company)\r\n\r\n        # Check if the company has salary rules; if not, provide initial default values\r\n        if company.salary_rules.exists():\r\n            salary_rule_formsets[company.id] = SalaryRuleFormSet(queryset=company.salary_rules.all(),\r\n                                                                 prefix=str(company.id))\r\n        else:\r\n            salary_rule_formsets[company.id] = SalaryRuleFormSet(queryset=company.salary_rules.none(), initial=default_salary_rule_data, prefix=str(company.id))\r\n\r\n    context = {\r\n        'companies': companies,\r\n        'company_forms': company_forms,\r\n        'salary_rule_formsets': salary_rule_formsets,\r\n        'query': query,\r\n        'company_form': CompanyForm(),  # Form for adding a new company\r\n    }\r\n    return render(request, 'employees/company_list.html', context)\r\n\r\n\r\ndef delete_company(request, company_id):\r\n    company = get_object_or_404(Company, id=company_id)\r\n    company.delete()\r\n    messages.success(request, \"Company deleted successfully!\")\r\n    return redirect('employees:company_list')\r\n\r\n\r\n# Staff Salary view\r\ndef staff_salary_list(request):\r\n    salaries = StaffSalary.objects.all()\r\n    return render(request, 'employees/staff_salary_list.html', {'salaries': salaries})\r\n\r\ndef staff_salary_create(request):\r\n    if request.method == 'POST':\r\n        form = StaffSalaryForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('employees:staff_salary_list')\r\n    else:\r\n        form = StaffSalaryForm()\r\n    return render(request, 'employees/staff_salary_form.html', {'form': form})\r\n\r\ndef staff_salary_update(request, pk):\r\n    salary = StaffSalary.objects.get(pk=pk)\r\n    if request.method == 'POST':\r\n        form = StaffSalaryForm(request.POST, instance=salary)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('employees:staff_salary_list')\r\n    else:\r\n        form = StaffSalaryForm(instance=salary)\r\n    return render(request, 'employees/staff_salary_form.html', {'form': form})
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/views.py b/salary_management/employees/views.py
--- a/salary_management/employees/views.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ b/salary_management/employees/views.py	(date 1730951660345)
@@ -26,10 +26,10 @@
 
 # Import your models and forms
 from .models import (Employee, Salary, Task, Profile, Payment, PurchaseItem, VendorInformation, Company,
-                     StaffSalary, AdvanceTransaction, SalaryRule)
+                     StaffSalary, AdvanceTransaction, SalaryRule, EInvoice)
 from .forms import (EmployeeForm, TaskForm, ExcelUploadForm, PaymentForm, PurchaseItemForm, VendorInformationForm,
                     CompanyForm, AddCompanyForm, EmployeeSearchForm, CustomUserCreationForm, StaffSalaryForm,
-                    AdvanceTransactionForm, ProfileEditForm, LoginForm, SalaryRuleFormSet)
+                    AdvanceTransactionForm, ProfileEditForm, LoginForm, SalaryRuleFormSet, EInvoiceForm)
 
 
 def get_user_role_flags(user):
@@ -935,4 +935,31 @@
             return redirect('employees:staff_salary_list')
     else:
         form = StaffSalaryForm(instance=salary)
-    return render(request, 'employees/staff_salary_form.html', {'form': form})
\ No newline at end of file
+    return render(request, 'employees/staff_salary_form.html', {'form': form})
+
+# Creating, editing invoice
+def e_invoice_list(request):
+    invoices = EInvoice.objects.all()
+    return render(request, 'employees/e_invoice_list.html', {'invoices': invoices})
+
+def e_invoice_create(request):
+    if request.method == 'POST':
+        form = EInvoiceForm(request.POST)
+        if form.is_valid():
+            form.save()
+            return redirect('e_invoice_list')
+    else:
+        form = EInvoiceForm()
+    return render(request, 'employees/e_invoice_form.html', {'form': form})
+
+# Update existing invoice
+def e_invoice_update(request, pk):
+    invoice = get_object_or_404(EInvoice, pk=pk)
+    if request.method == 'POST':
+        form = EInvoiceForm(request.POST)
+        if form.is_valid():
+            form.save()
+            return redirect('employees:e_invoice_list')
+    else:
+        form = EInvoiceForm(instance=invoice)
+    return render(request, 'employees/e_invoice_form.html', {'form': form})
Index: salary_management/employees/templates/employees/add_employee.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html' %}\r\n\r\n{% block title %}Manage Employees{% endblock %}\r\n\r\n{% block content %}\r\n<div class=\"container mt-5\">\r\n    <!-- Page Heading -->\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <h2 class=\"mb-4\">Manage Employees</h2>\r\n        </div>\r\n    </div>\r\n    <!-- Add Employee Section -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h4>Add Employee</h4>\r\n            <form method=\"post\" class=\"needs-validation\" novalidate>\r\n                {% csrf_token %}\r\n                {{ add_employee_form.as_p }}\r\n                <button type=\"submit\" name=\"submit_type\" value=\"add_employee\" class=\"btn btn-success mt-3\">Add Employee</button>\r\n            </form>\r\n        </div>\r\n        <!-- Upload Employees via Excel Section -->\r\n        <div class=\"col-md-6\">\r\n            <h4>Upload Employees via Excel</h4>\r\n            <form method=\"POST\" enctype=\"multipart/form-data\" class=\"needs-validation\" novalidate>\r\n                {% csrf_token %}\r\n                {{ upload_form.as_p }}\r\n                <div class=\"d-flex align-items-center mt-3\">\r\n                    <button type=\"submit\" name=\"submit_type\" value=\"upload_employees\" class=\"btn btn-primary mr-2\">Upload</button>\r\n                    <a href=\"{% url 'employees:download_template' %}\" class=\"btn btn-link\">Download Template</a>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/templates/employees/add_employee.html b/salary_management/employees/templates/employees/add_employee.html
--- a/salary_management/employees/templates/employees/add_employee.html	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ b/salary_management/employees/templates/employees/add_employee.html	(date 1730951660345)
@@ -1,37 +1,206 @@
 {% extends 'base.html' %}
 
-{% block title %}Manage Employees{% endblock %}
-
 {% block content %}
 <div class="container mt-5">
-    <!-- Page Heading -->
-    <div class="row">
-        <div class="col-12">
-            <h2 class="mb-4">Manage Employees</h2>
-        </div>
-    </div>
-    <!-- Add Employee Section -->
-    <div class="row">
-        <div class="col-md-6">
-            <h4>Add Employee</h4>
-            <form method="post" class="needs-validation" novalidate>
-                {% csrf_token %}
-                {{ add_employee_form.as_p }}
-                <button type="submit" name="submit_type" value="add_employee" class="btn btn-success mt-3">Add Employee</button>
-            </form>
-        </div>
-        <!-- Upload Employees via Excel Section -->
-        <div class="col-md-6">
-            <h4>Upload Employees via Excel</h4>
-            <form method="POST" enctype="multipart/form-data" class="needs-validation" novalidate>
-                {% csrf_token %}
-                {{ upload_form.as_p }}
-                <div class="d-flex align-items-center mt-3">
-                    <button type="submit" name="submit_type" value="upload_employees" class="btn btn-primary mr-2">Upload</button>
-                    <a href="{% url 'employees:download_template' %}" class="btn btn-link">Download Template</a>
-                </div>
-            </form>
-        </div>
-    </div>
+    <h2 class="mb-4">Add New Employee</h2>
+
+    {% if messages %}
+        {% for message in messages %}
+            <div class="alert {% if message.tags %}alert-{{ message.tags }}{% else %}alert-info{% endif %}">
+                {{ message }}
+            </div>
+        {% endfor %}
+    {% endif %}
+
+    <form method="post" novalidate>
+        {% csrf_token %}
+
+        <!-- Personal Details Section -->
+        <h4>Personal Details</h4>
+        <div class="row">
+            <div class="col-md-4">
+                {{ add_employee_form.employee_code.label_tag }}
+                {{ add_employee_form.employee_code }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.name.label_tag }}
+                {{ add_employee_form.name }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.father_name.label_tag }}
+                {{ add_employee_form.father_name }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.mother_name.label_tag }}
+                {{ add_employee_form.mother_name }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.gender.label_tag }}
+                {{ add_employee_form.gender }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.dob.label_tag }}
+                {{ add_employee_form.dob }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.marital_status.label_tag }}
+                {{ add_employee_form.marital_status }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.spouse_name.label_tag }}
+                {{ add_employee_form.spouse_name }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.mobile.label_tag }}
+                {{ add_employee_form.mobile }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.email.label_tag }}
+                {{ add_employee_form.email }}
+            </div>
+            <div class="col-md-12">
+                {{ add_employee_form.address.label_tag }}
+                {{ add_employee_form.address }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.district.label_tag }}
+                {{ add_employee_form.district }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.state.label_tag }}
+                {{ add_employee_form.state }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.pincode.label_tag }}
+                {{ add_employee_form.pincode }}
+            </div>
+        </div>
+
+        <hr>
+
+        <!-- Professional Details Section -->
+        <h4>Professional Details</h4>
+        <div class="row">
+            <div class="col-md-4">
+                {{ add_employee_form.pf_no.label_tag }}
+                {{ add_employee_form.pf_no }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.esi_no.label_tag }}
+                {{ add_employee_form.esi_no }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.uan.label_tag }}
+                {{ add_employee_form.uan }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.pan.label_tag }}
+                {{ add_employee_form.pan }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.company.label_tag }}
+                {{ add_employee_form.company }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.department.label_tag }}
+                {{ add_employee_form.department }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.designation.label_tag }}
+                {{ add_employee_form.designation }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.doj.label_tag }}
+                {{ add_employee_form.doj }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.doe.label_tag }}
+                {{ add_employee_form.doe }}
+            </div>
+        </div>
+
+        <hr>
+
+        <!-- Account Details Section -->
+        <h4>Account Details</h4>
+        <div class="row">
+            <div class="col-md-4">
+                {{ add_employee_form.pay_mode.label_tag }}
+                {{ add_employee_form.pay_mode }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.employer_account.label_tag }}
+                {{ add_employee_form.employer_account }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.employee_account.label_tag }}
+                {{ add_employee_form.employee_account }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.ifsc.label_tag }}
+                {{ add_employee_form.ifsc }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.kyc_status.label_tag }}
+                {{ add_employee_form.kyc_status }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.handicap.label_tag }}
+                {{ add_employee_form.handicap }}
+            </div>
+            <div class="col-md-12">
+                {{ add_employee_form.remarks.label_tag }}
+                {{ add_employee_form.remarks }}
+            </div>
+        </div>
+
+        <hr>
+
+        <!-- Salary Details Section -->
+        <h4>Salary Details</h4>
+        <div class="row">
+            <div class="col-md-4">
+                {{ add_employee_form.basic.label_tag }}
+                {{ add_employee_form.basic }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.transport.label_tag }}
+                {{ add_employee_form.transport }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.canteen.label_tag }}
+                {{ add_employee_form.canteen }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.pf_contribution.label_tag }}
+                {{ add_employee_form.pf_contribution }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.esic_contribution.label_tag }}
+                {{ add_employee_form.esic_contribution }}
+            </div>
+            <div class="col-md-4">
+                {{ add_employee_form.advance.label_tag }}
+                {{ add_employee_form.advance }}
+            </div>
+        </div>
+
+        <button type="submit" name="submit_type" value="add_employee" class="btn btn-primary mt-3">Add Employee</button>
+    </form>
+
+    <hr>
+
+    <h2>Upload Employees via Excel</h2>
+    <div class="mb-3">
+        <a href="{% url 'employees:download_template' %}" class="btn btn-link">Download Sample Excel Template</a>
+    </div>
+    <form method="post" enctype="multipart/form-data">
+        {% csrf_token %}
+        <div class="form-group">
+            {{ upload_form.file.label_tag }}
+            {{ upload_form.file }}
+        </div>
+        <button type="submit" name="submit_type" value="upload_employees" class="btn btn-secondary mt-3">Upload</button>
+    </form>
 </div>
 {% endblock %}
Index: salary_management/employees/migrations/0027_einvoice.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/migrations/0027_einvoice.py b/salary_management/employees/migrations/0027_einvoice.py
new file mode 100644
--- /dev/null	(date 1730951660345)
+++ b/salary_management/employees/migrations/0027_einvoice.py	(date 1730951660345)
@@ -0,0 +1,51 @@
+# Generated by Django 5.1.3 on 2024-11-06 12:24
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('employees', '0026_remove_salaryrule_standard_head'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='EInvoice',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('site', models.CharField(max_length=100)),
+                ('department', models.BooleanField(default=False)),
+                ('month', models.CharField(max_length=20)),
+                ('invoice_no', models.CharField(max_length=50)),
+                ('date', models.DateField()),
+                ('type', models.CharField(max_length=50)),
+                ('category', models.CharField(max_length=50)),
+                ('service', models.CharField(max_length=100)),
+                ('po_number', models.CharField(blank=True, max_length=50, null=True)),
+                ('buyer', models.CharField(blank=True, max_length=100, null=True)),
+                ('address', models.TextField(blank=True, null=True)),
+                ('gstin', models.CharField(blank=True, max_length=15, null=True)),
+                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
+                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
+                ('state', models.CharField(blank=True, max_length=50, null=True)),
+                ('city', models.CharField(blank=True, max_length=50, null=True)),
+                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
+                ('taxable', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('igst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('cgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('sgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('cess', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('st_cess', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('cess_non_adv', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('bill_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('deduction_narration_1', models.CharField(blank=True, max_length=255, null=True)),
+                ('deduction_amount_1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('deduction_narration_2', models.CharField(blank=True, max_length=255, null=True)),
+                ('deduction_amount_2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('cancelled', models.BooleanField(default=False)),
+                ('print_proprietor_name', models.BooleanField(default=False)),
+            ],
+        ),
+    ]
Index: salary_management/employees/migrations/0002_salaryotherfield.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/migrations/0002_salaryotherfield.py b/salary_management/employees/migrations/0002_salaryotherfield.py
new file mode 100644
--- /dev/null	(date 1730951660345)
+++ b/salary_management/employees/migrations/0002_salaryotherfield.py	(date 1730951660345)
@@ -0,0 +1,47 @@
+# Generated by Django 5.1.3 on 2024-11-06 00:15
+
+import django.db.models.deletion
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('employees', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='SalaryOtherField',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('Good_Work_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Good_Work_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('ABRY_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('ABRY_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Add_Bonus_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Add_Bonus_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Arrears_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Arrears_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Attnd_Award_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Attnd_Award_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Attnd_Incentive_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Attnd_Incentive_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Bonus_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Bonus_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Conveyance_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Conveyance_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Festival_Bonus_refund_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Festival_Bonus_refund_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Gratuity_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Gratuity_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Night_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Night_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Production_incentive_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Production_incentive_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Welding_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Welding_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_other_fields', to='employees.company')),
+            ],
+        ),
+    ]
Index: salary_management/employees/migrations/0026_remove_salaryrule_standard_head.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/migrations/0026_remove_salaryrule_standard_head.py b/salary_management/employees/migrations/0026_remove_salaryrule_standard_head.py
new file mode 100644
--- /dev/null	(date 1730951660345)
+++ b/salary_management/employees/migrations/0026_remove_salaryrule_standard_head.py	(date 1730951660345)
@@ -0,0 +1,17 @@
+# Generated by Django 5.1.3 on 2024-11-06 11:58
+
+from django.db import migrations
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('employees', '0025_remove_company_allowance_remove_company_hra_and_more'),
+    ]
+
+    operations = [
+        migrations.RemoveField(
+            model_name='salaryrule',
+            name='standard_head',
+        ),
+    ]
Index: salary_management/employees/migrations/0025_remove_company_allowance_remove_company_hra_and_more.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/migrations/0025_remove_company_allowance_remove_company_hra_and_more.py b/salary_management/employees/migrations/0025_remove_company_allowance_remove_company_hra_and_more.py
new file mode 100644
--- /dev/null	(date 1730951660345)
+++ b/salary_management/employees/migrations/0025_remove_company_allowance_remove_company_hra_and_more.py	(date 1730951660345)
@@ -0,0 +1,76 @@
+# Generated by Django 5.1.3 on 2024-11-06 11:51
+
+import django.core.validators
+import django.db.models.deletion
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('employees', '0024_alter_salaryrule_basic_rate_type_and_more'),
+    ]
+
+    operations = [
+        migrations.RemoveField(
+            model_name='company',
+            name='allowance',
+        ),
+        migrations.RemoveField(
+            model_name='company',
+            name='hra',
+        ),
+        migrations.AlterField(
+            model_name='company',
+            name='company_address',
+            field=models.CharField(default='', max_length=255),
+        ),
+        migrations.AlterField(
+            model_name='company',
+            name='company_contact_person_email',
+            field=models.EmailField(default='', max_length=100),
+        ),
+        migrations.AlterField(
+            model_name='company',
+            name='company_contact_person_number',
+            field=models.CharField(default='0000000000', max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')]),
+        ),
+        migrations.AlterField(
+            model_name='company',
+            name='company_salary_component_type',
+            field=models.CharField(choices=[('Hour', 'Hour'), ('Day', 'Day'), ('Month', 'Month')], default='0', max_length=20),
+        ),
+        migrations.CreateModel(
+            name='SalaryOtherField',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('Good_Work_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Good_Work_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('ABRY_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('ABRY_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Add_Bonus_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Add_Bonus_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Arrears_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Arrears_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Attnd_Award_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Attnd_Award_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Attnd_Incentive_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Attnd_Incentive_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Bonus_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Bonus_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Conveyance_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Conveyance_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Festival_Bonus_refund_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Festival_Bonus_refund_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Gratuity_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Gratuity_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Night_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Night_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Production_incentive_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Production_incentive_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Welding_Allowance_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Welding_Allowance_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_other_fields', to='employees.company')),
+            ],
+        ),
+    ]
Index: salary_management/employees/templates/employees/e_invoice_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/templates/employees/e_invoice_list.html b/salary_management/employees/templates/employees/e_invoice_list.html
new file mode 100644
--- /dev/null	(date 1730951660345)
+++ b/salary_management/employees/templates/employees/e_invoice_list.html	(date 1730951660345)
@@ -0,0 +1,43 @@
+{% extends 'base.html' %}
+{% block title %}E-Invoice List{% endblock %}
+{% block content %}
+<div class="container mt-5">
+    <div class="d-flex justify-content-between align-items-center">
+        <h2 class="text-primary">E-Invoice List</h2>
+        <a href="{% url 'employees:e_invoice_create' %}" class="btn btn-success">+ Create New Invoice</a>
+    </div>
+
+    <div class="table-responsive mt-4">
+        <table class="table table-striped table-bordered shadow-sm">
+            <thead class="table-dark"> <!-- Updated for Bootstrap 5 -->
+                <tr>
+                    <th scope="col">Invoice No.</th>
+                    <th scope="col">Buyer</th>
+                    <th scope="col">Date</th>
+                    <th scope="col" class="text-end">Amount</th> <!-- Bootstrap 5 uses text-end instead of text-right -->
+                    <th scope="col" class="text-center">Actions</th>
+                </tr>
+            </thead>
+            <tbody>
+                {% for invoice in invoices %}
+                    <tr>
+                        <td>{{ invoice.invoice_no }}</td>
+                        <td>{{ invoice.buyer }}</td>
+                        <td>{{ invoice.date|date:"M d, Y" }}</td>
+                        <td class="text-end">₹{{ invoice.bill_amount|floatformat:2 }}</td>
+                        <td class="text-center">
+                            <a href="{% url 'employees:e_invoice_update' invoice.pk %}" class="btn btn-warning btn-sm">
+                                <i class="fas fa-edit"></i> Edit
+                            </a>
+                        </td>
+                    </tr>
+                {% empty %}
+                    <tr>
+                        <td colspan="5" class="text-center text-muted">No invoices found.</td>
+                    </tr>
+                {% endfor %}
+            </tbody>
+        </table>
+    </div>
+</div>
+{% endblock %}
Index: salary_management/employees/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django import forms\r\nfrom .models import (Employee, Task, Payment, PurchaseItem, VendorInformation,\r\n                     Company, SalaryRule, Profile, StaffSalary, AdvanceTransaction)\r\nfrom django.contrib.auth.forms import AuthenticationForm, UserCreationForm\r\nfrom django.contrib.auth.models import User\r\nimport re\r\nfrom django.forms import modelformset_factory\r\nfrom django.core.exceptions import ValidationError\r\n\r\n\r\n# Constants for validation\r\nGST_REGEX = r'\\d{2}[A-Z]{5}\\d{4}[A-Z]{1}[A-Z\\d]{1}[Z]{1}[A-Z\\d]{1}'\r\nIFSC_REGEX = r'^[A-Za-z]{4}\\d{7}$'\r\n\r\n\r\n# Helper function for validating GST and IFSC codes\r\ndef validate_gst_number(gst_number):\r\n    if gst_number and not re.match(GST_REGEX, gst_number):\r\n        raise forms.ValidationError(\"Invalid GST number format.\")\r\n    return gst_number\r\n\r\n\r\ndef validate_ifsc_code(ifsc_code):\r\n    if ifsc_code and not re.match(IFSC_REGEX, ifsc_code):\r\n        raise forms.ValidationError(\"Invalid IFSC code format.\")\r\n    return ifsc_code\r\n\r\n\r\n# User Registration\r\nUSER_TYPE_CHOICES = [\r\n    ('Owner', 'Owner'),\r\n    ('Manager', 'Manager'),\r\n    ('Employee', 'Employee'),\r\n]\r\n\r\n\r\nclass CustomUserCreationForm(UserCreationForm):\r\n    first_name = forms.CharField(max_length=30, required=True,\r\n                                 widget=forms.TextInput(attrs={'placeholder': 'Enter First Name'}))\r\n    last_name = forms.CharField(max_length=30, required=True,\r\n                                widget=forms.TextInput(attrs={'placeholder': 'Enter Last Name'}))\r\n    user_type = forms.ChoiceField(choices=USER_TYPE_CHOICES, required=True)\r\n\r\n    company_name = forms.ModelChoiceField(queryset=Company.objects.all(), required=True, empty_label=\"Select Company\")\r\n\r\n    class Meta:\r\n        model = User\r\n        fields = ('username', 'password1', 'password2', 'first_name', 'last_name', 'user_type', 'company_name')\r\n\r\n    def clean(self):\r\n        cleaned_data = super().clean()\r\n        user_type = cleaned_data.get('user_type')\r\n\r\n        if user_type == 'Owner':\r\n            # Owner-specific validation\r\n            gst_number = cleaned_data.get('gst_number')\r\n            ifsc_code = cleaned_data.get('ifsc_code')\r\n            cleaned_data['gst_number'] = validate_gst_number(gst_number)\r\n            cleaned_data['ifsc_code'] = validate_ifsc_code(ifsc_code)\r\n\r\n        return cleaned_data\r\n\r\n\r\nclass ProfileEditForm(forms.ModelForm):\r\n    class Meta:\r\n        model = Profile\r\n        fields = [\r\n            'theme_preference', 'organisation_name', 'organisation_address',\r\n            'contact_number', 'account_number', 'ifsc_code', 'gst_number', 'company'\r\n        ]\r\n        widgets = {\r\n            'company': forms.Select(attrs={'class': 'form-select'}),\r\n        }\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super().__init__(*args, **kwargs)\r\n        # Customize company field\r\n        self.fields['company'].empty_label = \"Select Company\"\r\n        self.fields['company'].widget.attrs.update({'class': 'form-select'})\r\n\r\n\r\n# User login form\r\nclass LoginForm(AuthenticationForm):\r\n    username = forms.CharField(max_length=254,\r\n                               widget=forms.TextInput(attrs={'class': 'form-control', 'placeholder': 'Username'}))\r\n    password = forms.CharField(widget=forms.PasswordInput(attrs={'class': 'form-control', 'placeholder': 'Password'}))\r\n    company_name = forms.ModelChoiceField(\r\n        queryset=Company.objects.all(),\r\n        required=True,\r\n        empty_label=\"Select Company\",\r\n        widget=forms.Select(attrs={'class': 'form-select'})\r\n    )\r\n\r\n\r\n\r\n# Employee form\r\nclass EmployeeForm(forms.ModelForm):\r\n    class Meta:\r\n        model = Employee\r\n        fields = ['employee_code', 'name', 'father_name', 'basic', 'transport', 'canteen', 'pf', 'esic', 'advance']\r\n        widgets = {\r\n            'name': forms.TextInput(attrs={'class': 'form-control', 'placeholder': 'Employee Name'}),\r\n        }\r\n\r\n\r\n# Excel upload form\r\nclass ExcelUploadForm(forms.Form):\r\n    file = forms.FileField(widget=forms.ClearableFileInput(attrs={'class': 'form-control'}))\r\n\r\n\r\n# Employee search form\r\nclass EmployeeSearchForm(forms.Form):\r\n    employee_code_or_name = forms.CharField(label='Employee Code or Name', max_length=100, widget=forms.TextInput(\r\n        attrs={'class': 'form-control', 'placeholder': 'Search by Code or Name'}))\r\n\r\n\r\n# Task form\r\nclass TaskForm(forms.ModelForm):\r\n    class Meta:\r\n        model = Task\r\n        fields = ['title']\r\n        widgets = {\r\n            'title': forms.TextInput(attrs={'class': 'form-control', 'placeholder': 'Add new task'})\r\n        }\r\n\r\n\r\n# Payment form\r\nclass PaymentForm(forms.ModelForm):\r\n    payment_date = forms.DateField(widget=forms.SelectDateWidget)\r\n\r\n    class Meta:\r\n        model = Payment\r\n        fields = ['company_name', 'payment_against_bill', 'amount_received', 'payment_date']\r\n        widgets = {\r\n            'company_name': forms.TextInput(attrs={'class': 'form-control'}),\r\n        }\r\n\r\n\r\n# Purchase Item form\r\nclass PurchaseItemForm(forms.ModelForm):\r\n    date_of_purchase = forms.DateField(widget=forms.SelectDateWidget)\r\n\r\n    class Meta:\r\n        model = PurchaseItem\r\n        fields = [\r\n            'organization_code', 'organization_name', 'gst_number', 'bill_number', 'purchased_item',\r\n            'category', 'hsn_code', 'date_of_purchase', 'per_unit_cost', 'units_bought', 'cgst_rate',\r\n            'sgst_rate', 'igst_rate'\r\n        ]\r\n        widgets = {\r\n            'organization_name': forms.TextInput(attrs={'class': 'form-control'}),\r\n            'purchased_item': forms.TextInput(attrs={'class': 'form-control'}),\r\n            'category': forms.Select(attrs={'class': 'form-select'}),\r\n            'date_of_purchase': forms.DateInput(attrs={'class': 'form-control', 'type': 'date'}),\r\n        }\r\n\r\n\r\n# Vendor Information form\r\nclass VendorInformationForm(forms.ModelForm):\r\n    class Meta:\r\n        model = VendorInformation\r\n        fields = [\r\n            'vendor_id', 'firm_code', 'vendor_name', 'vendor_address', 'vendor_gst_number', 'vendor_account_number',\r\n            'vendor_ifsc_code', 'vendor_contact_person_name', 'vendor_contact_person_number'\r\n        ]\r\n        widgets = {\r\n            'vendor_name': forms.TextInput(attrs={'class': 'form-control'}),\r\n            'vendor_contact_person_name': forms.TextInput(attrs={'class': 'form-control'}),\r\n        }\r\n\r\n\r\n# Company form\r\nclass CompanyForm(forms.ModelForm):\r\n    class Meta:\r\n        model = Company\r\n        fields = [\r\n            'company_code', 'company_name', 'company_address', 'company_gst_number', 'company_account_number',\r\n            'company_ifsc_code', 'company_contact_person_name', 'company_contact_person_number',\r\n            'company_contact_person_email', 'company_pf_code', 'company_esic_code',\r\n            'company_service_charge_salary', 'company_service_charge_over_time', 'company_salary_component_type',\r\n            'company_ot_rule', 'company_bonus_formula', 'company_pf_deduction',\r\n            'company_esic_deduction_rule', 'company_welfare_deduction_rule',\r\n            'hra', 'allowance'  # add new fields here\r\n        ]\r\n        widgets = {\r\n            'company_address': forms.Textarea(attrs={'class': 'form-control'}),\r\n        }\r\n\r\nclass SalaryRuleForm(forms.ModelForm):\r\n    class Meta:\r\n        model = SalaryRule\r\n        fields = [\r\n            'standard_head',\r\n            'Basic_rate_type', 'Basic_pay_type',\r\n            'Sr_All_rate_type', 'Sr_All_pay_type',\r\n            'DA_rate_type', 'DA_pay_type',\r\n            'HRA_rate_type', 'HRA_pay_type',\r\n            'TA_rate_type', 'TA_pay_type',\r\n            'Med_rate_type', 'Med_pay_type',\r\n            'Conv_rate_type', 'Conv_pay_type',\r\n            'Wash_rate_type', 'Wash_pay_type',\r\n            'Eff_rate_type', 'Eff_pay_type',\r\n            'Other_rate_type', 'Other_pay_type',\r\n            'Incentive_rate_type', 'Incentive_pay_type',\r\n            'Bonus_rate_type', 'Bonus_pay_type',\r\n            'Over_Time_rate_type', 'Over_Time_pay_type'\r\n        ]\r\n\r\n# Define a formset for adding multiple salary rules at once\r\nSalaryRuleFormSet = modelformset_factory(SalaryRule, form=SalaryRuleForm, extra=1)\r\n\r\n# Adding Company form\r\nclass AddCompanyForm(forms.Form):\r\n    company_code = forms.CharField(max_length=4)\r\n    company_name = forms.CharField(max_length=100)\r\n    company_address = forms.CharField(widget=forms.Textarea)\r\n    company_gst_number = forms.CharField(max_length=20, validators=[validate_gst_number])\r\n    company_account_number = forms.CharField(max_length=20)\r\n    company_ifsc_code = forms.CharField(max_length=11, validators=[validate_ifsc_code])\r\n    company_contact_person_name = forms.CharField(max_length=100)\r\n    company_contact_person_number = forms.CharField(max_length=10)\r\n    company_contact_person_email = forms.EmailField()\r\n    company_pf_code = forms.CharField(max_length=20)\r\n    company_esic_code = forms.CharField(max_length=20)\r\n    company_service_charge_salary = forms.CharField(max_length=20)\r\n    company_service_charge_over_time = forms.CharField(max_length=20)\r\n    company_salary_component_type = forms.ChoiceField(choices=Company.USER_TYPE_CHOICES)\r\n    company_ot_rule = forms.CharField(max_length=20)\r\n    company_bonus_formula = forms.CharField(max_length=20)\r\n    company_pf_deduction = forms.CharField(max_length=20)\r\n    company_esic_deduction_rule = forms.CharField(max_length=20)\r\n    company_welfare_deduction_rule = forms.CharField(max_length=20),\r\n    hra = forms.BooleanField(required=False, initial=False, label=\"HRA\")\r\n    allowance = forms.BooleanField(required=False, initial=False, label=\"Allowance\")\r\n\r\n\r\n\r\n# Staff salary form\r\nclass StaffSalaryForm(forms.ModelForm):\r\n    class Meta:\r\n        model = StaffSalary\r\n        fields = [\r\n            'pf_no', 'name', 'father_name', 'gross_rate', 'esic_applicable', 'pf_applicable', 'lwf_applicable',\r\n            'pd', 'gross_salary', 'esic_deduction', 'pf_deduction', 'lwf_deduction', 'net_salary', 'advance_given',\r\n            'advance_deduction', 'advance_pending', 'salary_paid_from_account', 'date', 'opening_balance',\r\n            'amount_paid_to_employee',\r\n            'amount_recovered', 'amount_left', 'comment', 'column_1'\r\n        ]\r\n        widgets = {\r\n            'date': forms.SelectDateWidget(),\r\n        }\r\n\r\n\r\n# Advance Transaction form for staff\r\nclass AdvanceTransactionForm(forms.ModelForm):\r\n    class Meta:\r\n        model = AdvanceTransaction\r\n        fields = ['date', 'advance_taken', 'advance_deducted', 'nature', 'company', 'mode', 'cheque_no',\r\n                  'paid_received_by', 'paid_received_account', 'comment']\r\n        widgets = {\r\n            'date': forms.SelectDateWidget(),\r\n        }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/forms.py b/salary_management/employees/forms.py
--- a/salary_management/employees/forms.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ b/salary_management/employees/forms.py	(date 1730951660345)
@@ -1,6 +1,6 @@
 from django import forms
 from .models import (Employee, Task, Payment, PurchaseItem, VendorInformation,
-                     Company, SalaryRule, Profile, StaffSalary, AdvanceTransaction)
+                     Company, SalaryRule, Profile, StaffSalary, AdvanceTransaction, EInvoice)
 from django.contrib.auth.forms import AuthenticationForm, UserCreationForm
 from django.contrib.auth.models import User
 import re
@@ -260,3 +260,18 @@
         widgets = {
             'date': forms.SelectDateWidget(),
         }
+
+# E invoice for company
+class EInvoiceForm(forms.ModelForm):
+    class Meta:
+        model = EInvoice
+        fields = [
+            'site', 'department', 'month', 'invoice_no', 'date', 'type', 'category', 'service',
+            'po_number', 'buyer', 'address', 'gstin', 'contact_person', 'mobile', 'state', 'city',
+            'pincode', 'taxable', 'igst', 'cgst', 'sgst', 'cess', 'st_cess', 'cess_non_adv', 'total',
+            'bill_amount', 'deduction_narration_1', 'deduction_amount_1', 'deduction_narration_2', 'deduction_amount_2',
+            'cancelled', 'print_proprietor_name'
+        ]
+        widgets = {
+            'date': forms.DateInput(attrs={'type': 'date'}),
+        }
Index: salary_management/employees/templates/employees/employees_upload_details.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/templates/employees/employees_upload_details.html b/salary_management/employees/templates/employees/employees_upload_details.html
new file mode 100644
--- /dev/null	(date 1730951660345)
+++ b/salary_management/employees/templates/employees/employees_upload_details.html	(date 1730951660345)
@@ -0,0 +1,70 @@
+{% extends 'base.html' %}
+{% block title %}Upload Employee Details{% endblock %}
+{% block content %}
+<div class="container mt-5">
+    <h2>Upload Employee Details</h2>
+    
+    <form method="post" enctype="multipart/form-data">
+        {% csrf_token %}
+        
+        <!-- Company Selection Dropdown -->
+        <div class="form-group">
+            <label for="company">Select Company</label>
+            <select id="company" name="company" class="form-control" required>
+                <option value="">-- Select Company --</option>
+                {% for company in companies %}
+                    <option value="{{ company.id }}">{{ company.company_name }}</option>
+                {% endfor %}
+            </select>
+        </div>
+
+        <!-- Month Selection Dropdown -->
+        <div class="form-group">
+            <label for="month">Select Month</label>
+            <select id="month" name="month" class="form-control" required>
+                <option value="">-- Select Month --</option>
+                <option value="1">January</option>
+                <option value="2">February</option>
+                <option value="3">March</option>
+                <option value="4">April</option>
+                <option value="5">May</option>
+                <option value="6">June</option>
+                <option value="7">July</option>
+                <option value="8">August</option>
+                <option value="9">September</option>
+                <option value="10">October</option>
+                <option value="11">November</option>
+                <option value="12">December</option>
+            </select>
+        </div>
+
+        <!-- Year Selection Input -->
+        <div class="form-group">
+            <label for="year">Select Year</label>
+            <input type="number" id="year" name="year" class="form-control" placeholder="YYYY" min="2000" max="2100" required>
+        </div>
+
+        <!-- File Upload Section -->
+        <div class="form-group">
+            <label for="upload_type">Upload Type</label>
+            <div class="input-group">
+                <!-- Dropdown for Attendance and Advance -->
+                <select id="upload_type" name="upload_type" class="form-control" required>
+                    <option value="">-- Select Upload Type --</option>
+                    <option value="attendance">Attendance</option>
+                    <option value="advance">Advance</option>
+                </select>
+
+                <!-- File Upload Input -->
+                <input type="file" id="upload_file" name="upload_file" class="form-control-file ml-3" accept=".xlsx, .xls, .csv" required>
+            </div>
+        </div>
+
+        <!-- Submit Button -->
+        <button type="submit" class="btn btn-primary">Upload</button>
+
+        <!-- Sample Template Download Link -->
+        <a href="{% url 'employees:sample_download' %}" class="btn btn-info ml-2">Download Sample Template</a>
+    </form>
+</div>
+{% endblock %}
Index: salary_management/employees/templates/employees/company_add_update.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/templates/employees/company_add_update.html b/salary_management/employees/templates/employees/company_add_update.html
new file mode 100644
--- /dev/null	(date 1730951660345)
+++ b/salary_management/employees/templates/employees/company_add_update.html	(date 1730951660345)
@@ -0,0 +1,412 @@
+{% extends 'base.html' %}
+
+{% block title %}
+    {% if is_update %}
+        Update Company
+    {% else %}
+        Add Company
+    {% endif %}
+{% endblock %}
+
+{% block content %}
+<div class="container mt-5">
+    <div class="row justify-content-center">
+        <div class="col-md-10 col-lg-8">
+            <div class="card shadow-lg">
+                <div class="card-header bg-primary text-white text-center">
+                    <h4 class="mb-0">
+                        {% if is_update %}
+                            Update Company
+                        {% else %}
+                            Add New Company
+                        {% endif %}
+                    </h4>
+                </div>
+
+                <div class="card-body">
+                    {% if messages %}
+                        <div class="alert alert-info" role="alert">
+                            {% for message in messages %}
+                                <p class="mb-0">{{ message }}</p>
+                            {% endfor %}
+                        </div>
+                    {% endif %}
+
+                    <form method="POST" action="">
+                        {% csrf_token %}
+
+                        <!-- Company Form Fields -->
+                        <div class="form-row mb-4">
+                            {{ company_form.as_p }}
+                        </div>
+
+                        <!-- Salary Rules Section -->
+                        <h5 class="mt-4 text-center">Salary Rules</h5>
+                        <hr>
+                        <div class="form-group">
+                            {{ salary_rule_formset.management_form }}
+
+                            <!-- Salary Rules Table -->
+                            <div class="table-responsive">
+                                <table class="table table-bordered table-hover text-center">
+                                    <thead class="thead-light">
+                                        <tr>
+                                            <th>Standard Head</th>
+                                            <th>RATE TYPE</th>
+                                            <th>PAY TYPE</th>
+                                            <th>PF</th>
+                                            <th>ESIC</th>
+                                            <th>LWF</th>
+                                            <th>OT</th>
+                                            <th>TR</th>
+                                            <th>Add</th>
+                                        </tr>
+                                    </thead>
+                                    <tbody>
+                                        {% for form in salary_rule_formset %}
+                                            <tr>
+                                                <td>Basic</td>
+                                                <td>{{ form.Basic_rate_type }}</td>
+                                                <td>{{ form.Basic_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Sr All</td>
+                                                <td>{{ form.Sr_All_rate_type }}</td>
+                                                <td>{{ form.Sr_All_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>DA</td>
+                                                <td>{{ form.DA_rate_type }}</td>
+                                                <td>{{ form.DA_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>HRA</td>
+                                                <td>{{ form.HRA_rate_type }}</td>
+                                                <td>{{ form.HRA_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>TA</td>
+                                                <td>{{ form.TA_rate_type }}</td>
+                                                <td>{{ form.TA_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Med</td>
+                                                <td>{{ form.Med_rate_type }}</td>
+                                                <td>{{ form.Med_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Conv</td>
+                                                <td>{{ form.Conv_rate_type }}</td>
+                                                <td>{{ form.Conv_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Wash</td>
+                                                <td>{{ form.Wash_rate_type }}</td>
+                                                <td>{{ form.Wash_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Eff</td>
+                                                <td>{{ form.Eff_rate_type }}</td>
+                                                <td>{{ form.Eff_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Other</td>
+                                                <td>{{ form.Other_rate_type }}</td>
+                                                <td>{{ form.Other_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Incentive</td>
+                                                <td>{{ form.Incentive_rate_type }}</td>
+                                                <td>{{ form.Incentive_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Bonus</td>
+                                                <td>{{ form.Bonus_rate_type }}</td>
+                                                <td>{{ form.Bonus_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Over Time</td>
+                                                <td>{{ form.Over_Time_rate_type }}</td>
+                                                <td>{{ form.Over_Time_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+
+                                            <!-- Repeat similar structure for other fields -->
+                                        {% endfor %}
+                                    </tbody>
+                                </table>
+                            </div>
+                        </div>
+
+                        <!-- Salary Other Fields Section -->
+                        <h5 class="mt-4 text-center">Salary Other Fields</h5>
+                        <hr>
+                        <div class="form-group">
+                            {{ salary_other_field_formset.management_form }}
+
+                            <div class="table-responsive">
+                                <table class="table table-bordered table-hover text-center">
+                                    <thead class="thead-light">
+                                        <tr>
+                                            <th>Allowance Type</th>
+                                            <th>Rate Type</th>
+                                            <th>Pay Type</th>
+                                            <th>PF</th>
+                                            <th>ESIC</th>
+                                            <th>LWF</th>
+                                            <th>OT</th>
+                                            <th>TR</th>
+                                            <th>Add</th>
+                                        </tr>
+                                    </thead>
+                                    <tbody>
+                                        {% for form in salary_other_field_formset %}
+                                            <tr>
+                                                <td>Good Work Allowance</td>
+                                                <td>{{ form.Good_Work_Allowance_rate_type }}</td>
+                                                <td>{{ form.Good_Work_Allowance_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>ABRY</td>
+                                                <td>{{ form.ABRY_rate_type }}</td>
+                                                <td>{{ form.ABRY_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Add Bonus</td>
+                                                <td>{{ form.Add_Bonus_rate_type }}</td>
+                                                <td>{{ form.Add_Bonus_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Arrears</td>
+                                                <td>{{ form.Arrears_rate_type }}</td>
+                                                <td>{{ form.Arrears_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Attendance Award</td>
+                                                <td>{{ form.Attnd_Award_rate_type }}</td>
+                                                <td>{{ form.Attnd_Award_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Attendance Incentive</td>
+                                                <td>{{ form.Attnd_Incentive_rate_type }}</td>
+                                                <td>{{ form.Attnd_Incentive_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Bonus Allowance</td>
+                                                <td>{{ form.Bonus_Allowance_rate_type }}</td>
+                                                <td>{{ form.Bonus_Allowance_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Conveyance Allowance</td>
+                                                <td>{{ form.Conveyance_Allowance_rate_type }}</td>
+                                                <td>{{ form.Conveyance_Allowance_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Festival Bonus Refund</td>
+                                                <td>{{ form.Festival_Bonus_refund_rate_type }}</td>
+                                                <td>{{ form.Festival_Bonus_refund_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Gratuity</td>
+                                                <td>{{ form.Gratuity_rate_type }}</td>
+                                                <td>{{ form.Gratuity_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Night Allowance</td>
+                                                <td>{{ form.Night_Allowance_rate_type }}</td>
+                                                <td>{{ form.Night_Allowance_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Production Incentive</td>
+                                                <td>{{ form.Production_incentive_rate_type }}</td>
+                                                <td>{{ form.Production_incentive_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+                                            <tr>
+                                                <td>Welding Allowance</td>
+                                                <td>{{ form.Welding_Allowance_rate_type }}</td>
+                                                <td>{{ form.Welding_Allowance_pay_type }}</td>
+                                                <td><div class="form-check">{{ form.pf }}</div></td>
+                                                <td><div class="form-check">{{ form.esic }}</div></td>
+                                                <td><div class="form-check">{{ form.lwf }}</div></td>
+                                                <td><div class="form-check">{{ form.ot }}</div></td>
+                                                <td><div class="form-check">{{ form.tr }}</div></td>
+                                                <td><div class="form-check">{{ form.add }}</div></td>
+                                            </tr>
+
+                                            <!-- Repeat similar structure for other fields -->
+                                        {% endfor %}
+                                    </tbody>
+                                </table>
+                            </div>
+                        </div>
+
+                        <!-- Submit Button -->
+                        <div class="text-center mt-4">
+                            <button type="submit" class="btn btn-success btn-lg">
+                                {% if is_update %}
+                                    Update Company
+                                {% else %}
+                                    Add Company
+                                {% endif %}
+                            </button>
+                        </div>
+                    </form>
+                </div>
+
+                <div class="card-footer text-center">
+                    <a href="{% url 'employees:company_list' %}" class="btn btn-link">Back to Company List</a>
+                </div>
+            </div>
+        </div>
+    </div>
+</div>
+{% endblock %}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.12 (ProjectX)\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.12 (ProjectX)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ b/.idea/misc.xml	(date 1730952226514)
@@ -3,5 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.12 (ProjectX)" />
   </component>
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12 (ProjectX)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: salary_management/employees/templates/employees/e_invoice_form.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/templates/employees/e_invoice_form.html b/salary_management/employees/templates/employees/e_invoice_form.html
new file mode 100644
--- /dev/null	(date 1730951660345)
+++ b/salary_management/employees/templates/employees/e_invoice_form.html	(date 1730951660345)
@@ -0,0 +1,13 @@
+{% extends 'base.html' %}
+{% block title %}E-Invoice{% endblock %}
+{% block content %}
+<div class="container mt-5">
+    <h2>{% if form.instance.pk %}Edit{% else %}Create{% endif %} E-Invoice</h2>
+    <form method="post">
+        {% csrf_token %}
+        {{ form.as_p }}
+        <button type="submit" class="btn btn-primary">Save Invoice</button>
+        <a href="{% url 'employees:e_invoice_list' %}" class="btn btn-secondary">Back to List</a>
+    </form>
+</div>
+{% endblock %}
Index: salary_management/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-16LE
===================================================================
diff --git a/salary_management/.gitignore b/salary_management/.gitignore
new file mode 100644
--- /dev/null	(date 1730952309302)
+++ b/salary_management/.gitignore	(date 1730952309302)
@@ -0,0 +1,1 @@
+*.pyc
Index: .idea/ProjectX.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/ProjectX.iml b/.idea/ProjectX.iml
--- a/.idea/ProjectX.iml	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ b/.idea/ProjectX.iml	(date 1730952226498)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/venv" />
     </content>
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="Python 3.12" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e6dbd0ca-4a40-421b-a54d-6efd19655733\" name=\"Changes\" comment=\"Version 1.3.2 updated search module on employee list\">\r\n      <change afterPath=\"$PROJECT_DIR$/salary_management/employees/templates/employees/base.html\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/salary_management/employees/templates/employees/styles.css\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/salary_management/db.sqlite3\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/salary_management/db.sqlite3\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n        <option value=\"HTML File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;arush420&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/arush420/Project-X.git&quot;,\r\n    &quot;accountId&quot;: &quot;04b198ca-ebd4-4d6f-ac90-cb250cce0c15&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2mEJz5fanvaoFEaYTwDrIa24Zof\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;Python.models.executor&quot;: &quot;Run&quot;,\r\n    &quot;Python.settings.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/mkaus/MohitProjects/ProjectX/salary_management/employees/templates/employees&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\mkaus\\MohitProjects\\ProjectX\\salary_management\\employees\\templates\\employees\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\r\n      <module name=\"Project-X\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Tox\" factoryName=\"Tox\">\r\n      <module name=\"Project-X\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docs\" factoryName=\"Docutils task\">\r\n      <module name=\"Project-X\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"docutils_input_file\" value=\"\" />\r\n      <option name=\"docutils_output_file\" value=\"\" />\r\n      <option name=\"docutils_params\" value=\"\" />\r\n      <option name=\"docutils_task\" value=\"\" />\r\n      <option name=\"docutils_open_in_browser\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"docs\" factoryName=\"Sphinx task\">\r\n      <module name=\"Project-X\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"docutils_input_file\" value=\"\" />\r\n      <option name=\"docutils_output_file\" value=\"\" />\r\n      <option name=\"docutils_params\" value=\"\" />\r\n      <option name=\"docutils_task\" value=\"\" />\r\n      <option name=\"docutils_open_in_browser\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-884f5ed5d46b-c546a90a8094-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-242.22855.92\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e6dbd0ca-4a40-421b-a54d-6efd19655733\" name=\"Changes\" comment=\"\" />\r\n      <created>1726636061099</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1726636061099</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Version 1.0 creating basic framework\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726646249296</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726646249296</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Version 1.1 webpage stated working\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726648351096</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726648351096</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Version 1.2 Add employess button added\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726649937155</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726649937155</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Version 1.3 updated salary formula but thats not working properly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726655652664</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726655652664</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Version 1.3.1 updated salary formula with calculation working broadly\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726656348518</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726656348518</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Version 1.3.2 updated search module on employee list\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1726672131014</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1726672131014</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Version 1.0 creating basic framework\" />\r\n    <MESSAGE value=\"Version 1.1 webpage stated working\" />\r\n    <MESSAGE value=\"Version 1.2 Add employess button added\" />\r\n    <MESSAGE value=\"Version 1.3 updated salary formula but thats not working properly\" />\r\n    <MESSAGE value=\"Version 1.3.1 updated salary formula with calculation working broadly\" />\r\n    <MESSAGE value=\"Version 1.3.2 updated search module on employee list\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Version 1.3.2 updated search module on employee list\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ b/.idea/workspace.xml	(date 1730952226499)
@@ -5,10 +5,54 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e6dbd0ca-4a40-421b-a54d-6efd19655733" name="Changes" comment="Version 1.3.2 updated search module on employee list">
-      <change afterPath="$PROJECT_DIR$/salary_management/employees/templates/employees/base.html" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/salary_management/employees/templates/employees/styles.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/salary_management/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/salary_management/db.sqlite3" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/salary_management/employees/migrations/0002_salaryotherfield.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/salary_management/employees/migrations/0025_remove_company_allowance_remove_company_hra_and_more.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/salary_management/employees/migrations/0026_remove_salaryrule_standard_head.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/salary_management/employees/migrations/0027_einvoice.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/salary_management/employees/templates/employees/company_add_update.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/salary_management/employees/templates/employees/e_invoice_form.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/salary_management/employees/templates/employees/e_invoice_list.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/salary_management/employees/templates/employees/employees_upload_details.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/forms.py" beforeDir="false" afterPath="$PROJECT_DIR$/salary_management/employees/forms.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0001_alter_company_company_contact_person_number.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0001_initial.py" beforeDir="false" afterPath="$PROJECT_DIR$/salary_management/employees/migrations/0001_initial.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0002_profile.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0002_salary_advance_deduction_salary_basic_salary_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0003_payment.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0003_salary_advance.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0004_customuser.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0004_profile_user.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0005_delete_customuser.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0005_mymodel_alter_salary_unique_together_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0006_purchaseitem.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0006_salarytotals_staffsalary.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0007_staffsalary_advance_given_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0007_vendorinformation_purchaseitem_category_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0008_alter_staffsalary_advance_deduction_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0008_company.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0009_advancetransaction.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0009_alter_company_company_code.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0010_advancetransaction_paid_received_account_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0010_alter_salary_options.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0011_advancetransaction_account_advancetransaction_amount_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0011_auto_20241001_2013.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0012_profile_theme_preference.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0013_alter_advancetransaction_mode_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0014_task_user.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0015_profile_database.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0016_remove_advancetransaction_ifsc_code_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0017_remove_advancetransaction_account_ifsc_code_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0018_rename_company_cab_deduction_company_company_pf_deduction.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0019_company_salary_status.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0020_alter_company_salary_status_companyrule.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0021_alter_company_company_account_number_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0022_remove_company_salary_status_company_allowance_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0023_alter_advancetransaction_month_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/0024_alter_salaryrule_basic_rate_type_and_more.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/migrations/employees_create_groups_permissions.py" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/templates/employees/add_employee.html" beforeDir="false" afterPath="$PROJECT_DIR$/salary_management/employees/templates/employees/add_employee.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/templates/employees/company_list.html" beforeDir="false" afterPath="$PROJECT_DIR$/salary_management/employees/templates/employees/company_list.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/salary_management/employees/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/salary_management/employees/views.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -53,16 +97,16 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
-    &quot;Python.models.executor&quot;: &quot;Run&quot;,
-    &quot;Python.settings.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/mkaus/MohitProjects/ProjectX/salary_management/employees/templates/employees&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "DefaultHtmlFileTemplate": "HTML File",
+    "Python.models.executor": "Run",
+    "Python.settings.executor": "Run",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "git-widget-placeholder": "Merging master",
+    "last_opened_file_path": "C:/Users/mkaus/MohitProjects/ProjectX/salary_management/employees/templates/employees"
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\mkaus\MohitProjects\ProjectX\salary_management\employees\templates\employees" />
Index: salary_management/employees/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by Django 5.1.1 on 2024-09-22 05:54\r\n\r\nimport django.db.models.deletion\r\nimport django.utils.timezone\r\nfrom django.db import migrations, models\r\n\r\n\r\nclass Migration(migrations.Migration):\r\n\r\n    initial = True\r\n\r\n    dependencies = [\r\n    ]\r\n\r\n    operations = [\r\n        migrations.CreateModel(\r\n            name='Employee',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('employee_code', models.CharField(max_length=10, unique=True)),\r\n                ('name', models.CharField(max_length=100)),\r\n                ('father_name', models.CharField(max_length=100)),\r\n                ('basic', models.DecimalField(decimal_places=2, max_digits=10)),\r\n                ('transport', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),\r\n                ('canteen', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),\r\n                ('pf', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),\r\n                ('esic', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),\r\n                ('advance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Task',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('title', models.CharField(max_length=255)),\r\n                ('completed', models.BooleanField(default=False)),\r\n            ],\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Salary',\r\n            fields=[\r\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('month', models.PositiveSmallIntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),\r\n                ('year', models.PositiveIntegerField()),\r\n                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),\r\n                ('net_salary', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),\r\n                ('date_generated', models.DateTimeField(default=django.utils.timezone.now)),\r\n                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salaries', to='employees.employee')),\r\n            ],\r\n            options={\r\n                'ordering': ['-year', '-month'],\r\n                'unique_together': {('employee', 'month', 'year')},\r\n            },\r\n        ),\r\n    ]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/migrations/0001_initial.py b/salary_management/employees/migrations/0001_initial.py
--- a/salary_management/employees/migrations/0001_initial.py	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ b/salary_management/employees/migrations/0001_initial.py	(date 1730951660345)
@@ -1,7 +1,9 @@
-# Generated by Django 5.1.1 on 2024-09-22 05:54
+# Generated by Django 5.1.2 on 2024-11-05 12:51
 
+import django.core.validators
 import django.db.models.deletion
 import django.utils.timezone
+from django.conf import settings
 from django.db import migrations, models
 
 
@@ -10,9 +12,73 @@
     initial = True
 
     dependencies = [
+        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
     ]
 
     operations = [
+        migrations.CreateModel(
+            name='Company',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('company_code', models.CharField(default='0000', max_length=4)),
+                ('company_name', models.CharField(default='', max_length=100)),
+                ('company_address', models.CharField(default='', max_length=255)),
+                ('company_contact_person_name', models.CharField(default='', max_length=100)),
+                ('company_contact_person_number', models.CharField(default='0000000000', max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
+                ('company_contact_person_email', models.EmailField(default='', max_length=100)),
+                ('company_gst_number', models.CharField(default='0', max_length=20)),
+                ('company_pf_code', models.CharField(default='0', max_length=20)),
+                ('company_esic_code', models.CharField(default='0', max_length=20)),
+                ('company_service_charge_salary', models.CharField(default='0', max_length=20)),
+                ('company_service_charge_over_time', models.CharField(default='0', max_length=20)),
+                ('company_account_number', models.CharField(default='0', max_length=20)),
+                ('company_ifsc_code', models.CharField(default='0', max_length=11)),
+                ('company_salary_component_type', models.CharField(choices=[('Hour', 'Hour'), ('Day', 'Day'), ('Month', 'Month')], default='0', max_length=20)),
+                ('company_ot_rule', models.CharField(default='0', max_length=20)),
+                ('company_bonus_formula', models.CharField(default='0', max_length=20)),
+                ('company_pf_deduction', models.CharField(default='0', max_length=20)),
+                ('company_esic_deduction_rule', models.CharField(default='0', max_length=20)),
+                ('company_welfare_deduction_rule', models.CharField(default='0', max_length=20)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='EInvoice',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('site', models.CharField(max_length=100)),
+                ('department', models.BooleanField(default=False)),
+                ('month', models.CharField(max_length=20)),
+                ('invoice_no', models.CharField(max_length=50)),
+                ('date', models.DateField()),
+                ('type', models.CharField(max_length=50)),
+                ('category', models.CharField(max_length=50)),
+                ('service', models.CharField(max_length=100)),
+                ('po_number', models.CharField(blank=True, max_length=50, null=True)),
+                ('buyer', models.CharField(blank=True, max_length=100, null=True)),
+                ('address', models.TextField(blank=True, null=True)),
+                ('gstin', models.CharField(blank=True, max_length=15, null=True)),
+                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
+                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
+                ('state', models.CharField(blank=True, max_length=50, null=True)),
+                ('city', models.CharField(blank=True, max_length=50, null=True)),
+                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
+                ('taxable', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('igst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('cgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('sgst', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('cess', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('st_cess', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('cess_non_adv', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('total', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('bill_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('deduction_narration_1', models.CharField(blank=True, max_length=255, null=True)),
+                ('deduction_amount_1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('deduction_narration_2', models.CharField(blank=True, max_length=255, null=True)),
+                ('deduction_amount_2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('cancelled', models.BooleanField(default=False)),
+                ('print_proprietor_name', models.BooleanField(default=False)),
+            ],
+        ),
         migrations.CreateModel(
             name='Employee',
             fields=[
@@ -20,21 +86,243 @@
                 ('employee_code', models.CharField(max_length=10, unique=True)),
                 ('name', models.CharField(max_length=100)),
                 ('father_name', models.CharField(max_length=100)),
-                ('basic', models.DecimalField(decimal_places=2, max_digits=10)),
+                ('mother_name', models.CharField(blank=True, max_length=100, null=True)),
+                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
+                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
+                ('marital_status', models.CharField(blank=True, choices=[('UnMarried', 'UnMarried'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widow/Widower', 'Widow/Widower')], max_length=15)),
+                ('spouse_name', models.CharField(blank=True, max_length=100, null=True)),
+                ('mobile', models.CharField(blank=True, max_length=15, null=True)),
+                ('email', models.EmailField(blank=True, max_length=254, null=True)),
+                ('address', models.TextField(blank=True, null=True)),
+                ('district', models.CharField(blank=True, max_length=50, null=True)),
+                ('state', models.CharField(blank=True, max_length=50, null=True)),
+                ('pincode', models.CharField(blank=True, max_length=6, null=True)),
+                ('pf_no', models.CharField(blank=True, max_length=20, null=True)),
+                ('esi_no', models.CharField(blank=True, max_length=20, null=True)),
+                ('uan', models.CharField(blank=True, max_length=20, null=True)),
+                ('pan', models.CharField(blank=True, max_length=20, null=True)),
+                ('company', models.CharField(blank=True, max_length=100, null=True)),
+                ('department', models.CharField(blank=True, max_length=50, null=True)),
+                ('designation', models.CharField(blank=True, max_length=50, null=True)),
+                ('doj', models.DateField(blank=True, null=True, verbose_name='Date of Joining')),
+                ('doe', models.DateField(blank=True, null=True, verbose_name='Date of Exit')),
+                ('pay_mode', models.CharField(blank=True, max_length=50, null=True)),
+                ('employer_account', models.CharField(blank=True, max_length=50, null=True)),
+                ('employee_account', models.CharField(blank=True, max_length=50, null=True)),
+                ('ifsc', models.CharField(blank=True, max_length=11, null=True)),
+                ('kyc_status', models.CharField(blank=True, choices=[('Verified', 'Verified'), ('Pending', 'Pending')], max_length=10)),
+                ('handicap', models.BooleanField(default=False)),
+                ('remarks', models.TextField(blank=True, null=True)),
+                ('basic', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                 ('transport', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                 ('canteen', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
-                ('pf', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
-                ('esic', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
+                ('pf_contribution', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
+                ('esic_contribution', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                 ('advance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
             ],
         ),
+        migrations.CreateModel(
+            name='MyModel',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Payment',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('company_name', models.CharField(max_length=255)),
+                ('amount_received', models.DecimalField(decimal_places=2, max_digits=10)),
+                ('payment_date', models.DateField()),
+                ('account_of_own_company', models.CharField(max_length=255)),
+                ('payment_against_bill', models.CharField(max_length=255)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='PurchaseItem',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('organization_code', models.CharField(max_length=100)),
+                ('organization_name', models.CharField(max_length=255)),
+                ('gst_number', models.CharField(max_length=15)),
+                ('bill_number', models.CharField(max_length=50)),
+                ('purchased_item', models.CharField(max_length=255)),
+                ('category', models.CharField(choices=[('Stationary', 'Stationary'), ('Furniture', 'Furniture'), ('Pantry', 'Pantry'), ('Miscellaneous', 'Miscellaneous')], default='Miscellaneous', max_length=50)),
+                ('hsn_code', models.CharField(max_length=10)),
+                ('date_of_purchase', models.DateField()),
+                ('per_unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
+                ('units_bought', models.PositiveIntegerField()),
+                ('gross_total', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
+                ('cgst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
+                ('sgst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
+                ('igst_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
+                ('cgst_amount', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=12)),
+                ('sgst_amount', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=12)),
+                ('igst_amount', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=12)),
+                ('net_price', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=12)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='SalaryTotals',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('month', models.IntegerField()),
+                ('year', models.IntegerField()),
+                ('total_gross_salary', models.DecimalField(decimal_places=2, max_digits=12)),
+                ('total_pf', models.DecimalField(decimal_places=2, max_digits=12)),
+                ('total_esic', models.DecimalField(decimal_places=2, max_digits=12)),
+                ('total_canteen', models.DecimalField(decimal_places=2, max_digits=12)),
+                ('total_advance', models.DecimalField(decimal_places=2, max_digits=12)),
+                ('total_net_salary', models.DecimalField(decimal_places=2, max_digits=12)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='StaffSalary',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('pf_no', models.CharField(max_length=20, unique=True)),
+                ('name', models.CharField(max_length=100)),
+                ('father_name', models.CharField(blank=True, max_length=100, null=True)),
+                ('gross_rate', models.DecimalField(decimal_places=2, max_digits=10)),
+                ('esic_applicable', models.BooleanField(default=False)),
+                ('pf_applicable', models.BooleanField(default=False)),
+                ('lwf_applicable', models.BooleanField(default=False)),
+                ('pd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
+                ('esic_deduction', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('pf_deduction', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('lwf_deduction', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('net_salary', models.DecimalField(decimal_places=2, max_digits=10)),
+                ('advance_given', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
+                ('advance_deduction', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
+                ('advance_pending', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10)),
+                ('salary_paid_from_account', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('date', models.DateField(default=django.utils.timezone.now)),
+                ('opening_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('amount_paid_to_employee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('amount_recovered', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('amount_left', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
+                ('comment', models.TextField(blank=True, null=True)),
+                ('column_1', models.CharField(blank=True, max_length=100, null=True)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='VendorInformation',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('vendor_id', models.CharField(max_length=4)),
+                ('firm_code', models.CharField(max_length=4)),
+                ('vendor_name', models.CharField(max_length=100)),
+                ('vendor_address', models.TextField()),
+                ('vendor_gst_number', models.CharField(max_length=20)),
+                ('vendor_account_number', models.CharField(max_length=20)),
+                ('vendor_ifsc_code', models.CharField(max_length=11)),
+                ('vendor_contact_person_name', models.CharField(max_length=100)),
+                ('vendor_contact_person_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
+            ],
+        ),
+        migrations.CreateModel(
+            name='Profile',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('theme_preference', models.CharField(default='light', max_length=10)),
+                ('database', models.CharField(default='yada yada', max_length=255)),
+                ('user_type', models.CharField(choices=[('Owner', 'Owner'), ('Manager', 'Manager'), ('Employee', 'Employee')], default='Employee', max_length=10)),
+                ('organisation_name', models.CharField(blank=True, max_length=255, null=True)),
+                ('organisation_address', models.TextField(blank=True, null=True)),
+                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
+                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
+                ('ifsc_code', models.CharField(blank=True, max_length=11, null=True)),
+                ('gst_number', models.CharField(blank=True, max_length=15, null=True)),
+                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='employees.company')),
+                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
+            ],
+        ),
+        migrations.CreateModel(
+            name='SalaryRule',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('Basic_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Basic_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Sr_All_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Sr_All_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('DA_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('DA_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('HRA_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('HRA_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('TA_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('TA_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Med_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Med_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Conv_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Conv_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Wash_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Wash_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Eff_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Eff_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Other_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Other_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Incentive_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Incentive_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Bonus_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Bonus_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('Over_Time_rate_type', models.CharField(choices=[('Per Month', 'Per Month'), ('Per Day', 'Per Day')], default='Per Month', max_length=20)),
+                ('Over_Time_pay_type', models.CharField(choices=[('PayDay', 'PayDay'), ('OTHour', 'OTHour')], default='PayDay', max_length=20)),
+                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salary_rules', to='employees.company')),
+            ],
+        ),
+        migrations.CreateModel(
+            name='AdvanceTransaction',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('serial_number', models.IntegerField(default=1)),
+                ('name', models.CharField(default='unknown', max_length=100)),
+                ('amount', models.DecimalField(blank=True, decimal_places=2, default='', max_digits=10, null=True)),
+                ('paid_received', models.CharField(choices=[('paid', 'Paid'), ('received', 'Received')], default='paid', max_length=10)),
+                ('nature', models.CharField(choices=[('personal', 'Personal'), ('office', 'Office Expense'), ('company', 'Company Expense')], default='personal', max_length=100)),
+                ('company', models.CharField(blank=True, default='Shree Hanuman', max_length=100, null=True)),
+                ('mode', models.CharField(choices=[('cash', 'Cash'), ('bank', 'Bank')], default='cash', max_length=50)),
+                ('cheque_no', models.CharField(blank=True, max_length=50, null=True)),
+                ('month', models.CharField(default='November', max_length=20)),
+                ('net_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('account', models.CharField(blank=True, default=0.0, max_length=50, null=True)),
+                ('ifsc_code', models.CharField(blank=True, default=0.0, max_length=50, null=True)),
+                ('column1', models.CharField(blank=True, max_length=100, null=True)),
+                ('date', models.DateField(default=django.utils.timezone.now)),
+                ('advance_taken', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('advance_deducted', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('advance_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('paid_received_by', models.CharField(default='Unknown', max_length=100)),
+                ('paid_received_account', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('comment', models.TextField(blank=True, null=True)),
+                ('staff_salary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='employees.staffsalary')),
+            ],
+        ),
         migrations.CreateModel(
             name='Task',
             fields=[
                 ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                 ('title', models.CharField(max_length=255)),
                 ('completed', models.BooleanField(default=False)),
+                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transferred_tasks', to=settings.AUTH_USER_MODEL)),
             ],
+        ),
+        migrations.CreateModel(
+            name='EmployeesAttendance',
+            fields=[
+                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
+                ('year', models.PositiveIntegerField()),
+                ('month', models.PositiveIntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
+                ('days_worked', models.PositiveIntegerField()),
+                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='employees.company')),
+                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='employees.employee')),
+            ],
+            options={
+                'verbose_name': 'Employee Attendance',
+                'verbose_name_plural': 'Employee Attendance Records',
+                'unique_together': {('company', 'employee', 'year', 'month')},
+            },
         ),
         migrations.CreateModel(
             name='Salary',
@@ -42,14 +330,22 @@
                 ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                 ('month', models.PositiveSmallIntegerField(choices=[(1, 'January'), (2, 'February'), (3, 'March'), (4, 'April'), (5, 'May'), (6, 'June'), (7, 'July'), (8, 'August'), (9, 'September'), (10, 'October'), (11, 'November'), (12, 'December')])),
                 ('year', models.PositiveIntegerField()),
-                ('gross_salary', models.DecimalField(decimal_places=2, max_digits=10)),
-                ('net_salary', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
+                ('advance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('basic_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('transport', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('canteen', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('pf', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('esic', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('advance_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('gross_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
+                ('net_salary', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                 ('date_generated', models.DateTimeField(default=django.utils.timezone.now)),
                 ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salaries', to='employees.employee')),
             ],
             options={
                 'ordering': ['-year', '-month'],
-                'unique_together': {('employee', 'month', 'year')},
+                'permissions': [('can_generate_payroll', 'Can generate payroll'), ('can_modify_salary', 'Can modify salary records'), ('can_view_confidential_data', 'Can view confidential data')],
+                'constraints': [models.UniqueConstraint(fields=('employee', 'month', 'year'), name='unique_salary_per_month_year')],
             },
         ),
     ]
Index: salary_management/employees/templates/employees/company_list.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends 'base.html' %}\r\n{% block title %}Company List{% endblock %}\r\n{% block content %}\r\n<div class=\"container mt-5\">\r\n    <div class=\"row justify-content-center\">\r\n        <div class=\"col-lg-10\">\r\n            <h2 class=\"mb-4\">Company List</h2>\r\n            <!-- Search Bar -->\r\n            <form method=\"GET\" action=\"{% url 'employees:company_list' %}\" class=\"form-inline mb-3\">\r\n                <input class=\"form-control mr-sm-2\" type=\"search\" name=\"q\" value=\"{{ query }}\" placeholder=\"Search for a company\" aria-label=\"Search\">\r\n                <button class=\"btn btn-outline-primary my-2 my-sm-0\" type=\"submit\">Search</button>\r\n            </form>\r\n\r\n            <button class=\"btn btn-success mb-3\" id=\"toggleAddCompanyForm\" aria-expanded=\"false\" aria-controls=\"addCompanyForm\">Add New Company</button>\r\n\r\n            <div id=\"addCompanyForm\" style=\"display: none;\">\r\n                <h4>Add Company</h4>\r\n                <form method=\"POST\" action=\"{% url 'employees:company_list' %}\">\r\n                    {% csrf_token %}\r\n                    {{ company_form.as_p }}\r\n                    <button type=\"submit\" name=\"add_company\" class=\"btn btn-primary w-100\">Add Company</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-hover mt-3\">\r\n                    <thead class=\"thead-light\">\r\n                        <tr>\r\n                            <th>Company Code</th>\r\n                            <th>Company Name</th>\r\n                            <th>GST Number</th>\r\n                            <th>Contact Person</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {% for company in companies %}\r\n                            <tr>\r\n                                <td>{{ company.company_code }}</td>\r\n                                <td>{{ company.company_name }}</td>\r\n                                <td>{{ company.company_gst_number }}</td>\r\n                                <td>{{ company.company_contact_person_name }}</td>\r\n                                <td>\r\n                                    <button class=\"btn btn-info btn-sm\" onclick=\"toggleCompanyDetails('{{ company.id }}')\">View</button>\r\n                                    <button class=\"btn btn-warning btn-sm\" onclick=\"editCompany('{{ company.id }}')\">Edit</button>\r\n                                    <form method=\"POST\" action=\"{% url 'employees:delete_company' company.id %}\" style=\"display:inline;\" onsubmit=\"return confirm('Are you sure you want to delete this company?');\">\r\n                                        {% csrf_token %}\r\n                                        <button type=\"submit\" class=\"btn btn-danger btn-sm\">Delete</button>\r\n                                    </form>\r\n                                </td>\r\n                            </tr>\r\n                            <tr id=\"company-details-{{ company.id }}\" style=\"display: none;\" class=\"bg-light\">\r\n                                <td colspan=\"5\">\r\n                                    <form method=\"post\" action=\"{% url 'employees:company_list' %}\">\r\n                                        {% csrf_token %}\r\n                                        <h4>Salary Rules for {{ company.company_name }}</h4>\r\n                                        <input type=\"hidden\" name=\"company_id\" value=\"{{ company.id }}\">\r\n                                        {% with formset=salary_rule_formsets|default_if_none:'' %}\r\n                                            {{ formset.management_form }}\r\n                                            {% for form in formset %}\r\n                                                <div class=\"salary-rule-form mb-3 p-2 border\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.standard_head.label_tag }} {{ form.standard_head }}\r\n                                                        </div>\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.Basic_rate_type.label_tag }} {{ form.Basic_rate_type }}\r\n                                                        </div>\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.Basic_pay_type.label_tag }} {{ form.Basic_pay_type }}\r\n                                                        </div>\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.Sr_All_rate_type.label_tag }} {{ form.Sr_All_rate_type }}\r\n                                                        </div>\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.Sr_All_pay_type.label_tag }} {{ form.Sr_All_pay_type }}\r\n                                                        </div>\r\n                                                        <div class=\"col-md-2 text-center\">\r\n                                                            <button type=\"submit\" class=\"btn btn-success add-rule-btn\">Save</button>\r\n                                                            <span class=\"success-tick\" style=\"display: none;\">✔</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <!-- Continue adding more fields as needed -->\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.DA_rate_type.label_tag }} {{ form.DA_rate_type }}\r\n                                                        </div>\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.DA_pay_type.label_tag }} {{ form.DA_pay_type }}\r\n                                                        </div>\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.HRA_rate_type.label_tag }} {{ form.HRA_rate_type }}\r\n                                                        </div>\r\n                                                        <div class=\"col-md-2\">\r\n                                                            {{ form.HRA_pay_type.label_tag }} {{ form.HRA_pay_type }}\r\n                                                        </div>\r\n                                                        <!-- Add additional rows as necessary for other fields -->\r\n                                                    </div>\r\n                                                </div>\r\n                                            {% endfor %}\r\n                                        {% endwith %}\r\n                                        <button type=\"submit\" name=\"update_salary_rules\" class=\"btn btn-primary\">Save All Salary Rules</button>\r\n                                    </form>\r\n                                </td>\r\n                            </tr>\r\n                        {% endfor %}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<script>\r\n    document.getElementById('toggleAddCompanyForm').onclick = function () {\r\n        var form = document.getElementById('addCompanyForm');\r\n        form.style.display = form.style.display === 'none' ? 'block' : 'none';\r\n        this.setAttribute('aria-expanded', form.style.display === 'block');\r\n    };\r\n\r\n    function toggleCompanyDetails(companyId) {\r\n        var detailsRow = document.getElementById('company-details-' + companyId);\r\n        detailsRow.style.display = detailsRow.style.display === 'none' ? 'table-row' : 'none';\r\n    }\r\n\r\n    document.querySelectorAll('.add-rule-btn').forEach(button => {\r\n        button.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            let form = this.closest('form');\r\n            form.submit();\r\n            let successTick = this.nextElementSibling;\r\n            successTick.style.display = 'inline';\r\n            setTimeout(() => successTick.style.display = 'none', 2000);\r\n        });\r\n    });\r\n</script>\r\n{% endblock %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/salary_management/employees/templates/employees/company_list.html b/salary_management/employees/templates/employees/company_list.html
--- a/salary_management/employees/templates/employees/company_list.html	(revision d01e38589ab9066bcd1be9476fd440b8d140edfd)
+++ b/salary_management/employees/templates/employees/company_list.html	(date 1730951660345)
@@ -5,22 +5,12 @@
     <div class="row justify-content-center">
         <div class="col-lg-10">
             <h2 class="mb-4">Company List</h2>
-            <!-- Search Bar -->
             <form method="GET" action="{% url 'employees:company_list' %}" class="form-inline mb-3">
                 <input class="form-control mr-sm-2" type="search" name="q" value="{{ query }}" placeholder="Search for a company" aria-label="Search">
                 <button class="btn btn-outline-primary my-2 my-sm-0" type="submit">Search</button>
             </form>
 
-            <button class="btn btn-success mb-3" id="toggleAddCompanyForm" aria-expanded="false" aria-controls="addCompanyForm">Add New Company</button>
-
-            <div id="addCompanyForm" style="display: none;">
-                <h4>Add Company</h4>
-                <form method="POST" action="{% url 'employees:company_list' %}">
-                    {% csrf_token %}
-                    {{ company_form.as_p }}
-                    <button type="submit" name="add_company" class="btn btn-primary w-100">Add Company</button>
-                </form>
-            </div>
+            <a href="{% url 'employees:company_add' %}" class="btn btn-success mb-3">Add New Company</a>
 
             <div class="table-responsive">
                 <table class="table table-hover mt-3">
@@ -41,66 +31,21 @@
                                 <td>{{ company.company_gst_number }}</td>
                                 <td>{{ company.company_contact_person_name }}</td>
                                 <td>
-                                    <button class="btn btn-info btn-sm" onclick="toggleCompanyDetails('{{ company.id }}')">View</button>
-                                    <button class="btn btn-warning btn-sm" onclick="editCompany('{{ company.id }}')">Edit</button>
+                                    <button class="btn btn-info btn-sm" onclick="toggleDetails('details-{{ company.id }}')">View</button>
+                                    <a href="{% url 'employees:company_update' company.id %}" class="btn btn-warning btn-sm">Edit</a>
                                     <form method="POST" action="{% url 'employees:delete_company' company.id %}" style="display:inline;" onsubmit="return confirm('Are you sure you want to delete this company?');">
                                         {% csrf_token %}
                                         <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                     </form>
                                 </td>
                             </tr>
-                            <tr id="company-details-{{ company.id }}" style="display: none;" class="bg-light">
+                            <!-- Hidden row for company details -->
+                            <tr id="details-{{ company.id }}" style="display: none;">
                                 <td colspan="5">
-                                    <form method="post" action="{% url 'employees:company_list' %}">
-                                        {% csrf_token %}
-                                        <h4>Salary Rules for {{ company.company_name }}</h4>
-                                        <input type="hidden" name="company_id" value="{{ company.id }}">
-                                        {% with formset=salary_rule_formsets|default_if_none:'' %}
-                                            {{ formset.management_form }}
-                                            {% for form in formset %}
-                                                <div class="salary-rule-form mb-3 p-2 border">
-                                                    <div class="row">
-                                                        <div class="col-md-2">
-                                                            {{ form.standard_head.label_tag }} {{ form.standard_head }}
-                                                        </div>
-                                                        <div class="col-md-2">
-                                                            {{ form.Basic_rate_type.label_tag }} {{ form.Basic_rate_type }}
-                                                        </div>
-                                                        <div class="col-md-2">
-                                                            {{ form.Basic_pay_type.label_tag }} {{ form.Basic_pay_type }}
-                                                        </div>
-                                                        <div class="col-md-2">
-                                                            {{ form.Sr_All_rate_type.label_tag }} {{ form.Sr_All_rate_type }}
-                                                        </div>
-                                                        <div class="col-md-2">
-                                                            {{ form.Sr_All_pay_type.label_tag }} {{ form.Sr_All_pay_type }}
-                                                        </div>
-                                                        <div class="col-md-2 text-center">
-                                                            <button type="submit" class="btn btn-success add-rule-btn">Save</button>
-                                                            <span class="success-tick" style="display: none;">✔</span>
-                                                        </div>
-                                                    </div>
-                                                    <!-- Continue adding more fields as needed -->
-                                                    <div class="row">
-                                                        <div class="col-md-2">
-                                                            {{ form.DA_rate_type.label_tag }} {{ form.DA_rate_type }}
-                                                        </div>
-                                                        <div class="col-md-2">
-                                                            {{ form.DA_pay_type.label_tag }} {{ form.DA_pay_type }}
-                                                        </div>
-                                                        <div class="col-md-2">
-                                                            {{ form.HRA_rate_type.label_tag }} {{ form.HRA_rate_type }}
-                                                        </div>
-                                                        <div class="col-md-2">
-                                                            {{ form.HRA_pay_type.label_tag }} {{ form.HRA_pay_type }}
-                                                        </div>
-                                                        <!-- Add additional rows as necessary for other fields -->
-                                                    </div>
-                                                </div>
-                                            {% endfor %}
-                                        {% endwith %}
-                                        <button type="submit" name="update_salary_rules" class="btn btn-primary">Save All Salary Rules</button>
-                                    </form>
+                                    <strong>Address:</strong> {{ company.address }}<br>
+                                    <strong>Email:</strong> {{ company.email }}<br>
+                                    <strong>Phone:</strong> {{ company.phone }}<br>
+                                    <strong>Additional Info:</strong> {{ company.additional_info }}
                                 </td>
                             </tr>
                         {% endfor %}
@@ -112,26 +57,9 @@
 </div>
 
 <script>
-    document.getElementById('toggleAddCompanyForm').onclick = function () {
-        var form = document.getElementById('addCompanyForm');
-        form.style.display = form.style.display === 'none' ? 'block' : 'none';
-        this.setAttribute('aria-expanded', form.style.display === 'block');
-    };
-
-    function toggleCompanyDetails(companyId) {
-        var detailsRow = document.getElementById('company-details-' + companyId);
-        detailsRow.style.display = detailsRow.style.display === 'none' ? 'table-row' : 'none';
+    function toggleDetails(id) {
+        var row = document.getElementById(id);
+        row.style.display = row.style.display === 'none' ? 'table-row' : 'none';
     }
-
-    document.querySelectorAll('.add-rule-btn').forEach(button => {
-        button.addEventListener('click', function (e) {
-            e.preventDefault();
-            let form = this.closest('form');
-            form.submit();
-            let successTick = this.nextElementSibling;
-            successTick.style.display = 'inline';
-            setTimeout(() => successTick.style.display = 'none', 2000);
-        });
-    });
 </script>
 {% endblock %}
